'use strict';

const awsCommon = require('../../lib/aws-common');

/**
 * AWS Data Pipeline version 2012-10-29
 *
 * --- TODO REMOVE WHEN IMPLEMENTED ---
 * AUTOGENERATED BY build-api.py
 */

// Setup input and output to use AWS protocol json
require('../../lib/aws-common/shape_http')('json', module.exports, null);
// -----------------------------------
module.exports.ReportTaskRunnerHeartbeat = function ReportTaskRunnerHeartbeat(aws) {
  var workerGroup = aws.params.workerGroup;
  var taskrunnerId = aws.params.taskrunnerId;
  var hostname = aws.params.hostname;
  if (!taskrunnerId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter taskrunnerId'];
  }


  // TODO implement code

  var ret = {
    terminate: false,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.ActivatePipeline = function ActivatePipeline(aws) {
  var pipelineId = aws.params.pipelineId;
  var startTimestamp = aws.params.startTimestamp /* Type timestamp */;
  var parameterValues = aws.params.parameterValues;
  if (!pipelineId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineId'];
  }


  // TODO implement code

  var ret = {

  };
  return [200, ret];
};
// -----------------------------------
module.exports.DescribeObjects = function DescribeObjects(aws) {
  var objectIds = aws.params.objectIds;
  var pipelineId = aws.params.pipelineId;
  var marker = aws.params.marker;
  var evaluateExpressions = aws.params.evaluateExpressions /* Type boolean */;
  if (!pipelineId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineId'];
  }
  if (!objectIds) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter objectIds'];
  }


  // TODO implement code

  var ret = {
    pipelineObjects: /*Sq*/[ /*Sr*/{
      name: '',
      id: '',
      fields: /*Ss*/[ {
        key: '',
        refValue: '',
        stringValue: '',
      }, /* ...*/ ],
    }, /* ...*/ ],
    hasMoreResults: false,
    marker: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.ReportTaskProgress = function ReportTaskProgress(aws) {
  var fields = aws.params.fields;
  var taskId = aws.params.taskId;
  if (!taskId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter taskId'];
  }


  // TODO implement code

  var ret = {
    canceled: false,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.DeletePipeline = function DeletePipeline(aws) {
  var pipelineId = aws.params.pipelineId;
  if (!pipelineId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineId'];
  }


  // TODO implement code

  var ret = {};
  return [200, ret];
};
// -----------------------------------
module.exports.RemoveTags = function RemoveTags(aws) {
  var pipelineId = aws.params.pipelineId;
  var tagKeys = aws.params.tagKeys;
  if (!pipelineId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineId'];
  }
  if (!tagKeys) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter tagKeys'];
  }


  // TODO implement code

  var ret = {

  };
  return [200, ret];
};
// -----------------------------------
module.exports.PollForTask = function PollForTask(aws) {
  var workerGroup = aws.params.workerGroup;
  var instanceIdentity = aws.params.instanceIdentity /* Type structure */;
  var hostname = aws.params.hostname;
  if (!workerGroup) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter workerGroup'];
  }


  // TODO implement code

  var ret = {
    taskObject: {
      pipelineId: '',
      attemptId: '',
      objects: {} /*Map*/,
      taskId: '',
    },
  };
  return [200, ret];
};
// -----------------------------------
module.exports.ListPipelines = function ListPipelines(aws) {
  var marker = aws.params.marker;


  // TODO implement code

  var ret = {
    hasMoreResults: false,
    marker: '',
    pipelineIdList: [ {
      name: '',
      id: '',
    }, /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.QueryObjects = function QueryObjects(aws) {
  var limit = aws.params.limit /* Type integer */;
  var pipelineId = aws.params.pipelineId;
  var sphere = aws.params.sphere;
  var marker = aws.params.marker;
  var query = aws.params.query /* Type structure */;
  if (!pipelineId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineId'];
  }
  if (!sphere) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter sphere'];
  }


  // TODO implement code

  var ret = {
    hasMoreResults: false,
    marker: '',
    ids: /*Sn*/[ '', /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.EvaluateExpression = function EvaluateExpression(aws) {
  var pipelineId = aws.params.pipelineId;
  var expression = aws.params.expression;
  var objectId = aws.params.objectId;
  if (!pipelineId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineId'];
  }
  if (!objectId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter objectId'];
  }
  if (!expression) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter expression'];
  }


  // TODO implement code

  var ret = {
    evaluatedExpression: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.ValidatePipelineDefinition = function ValidatePipelineDefinition(aws) {
  var pipelineId = aws.params.pipelineId;
  var pipelineObjects = aws.params.pipelineObjects;
  var parameterValues = aws.params.parameterValues;
  var parameterObjects = aws.params.parameterObjects;
  if (!pipelineId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineId'];
  }
  if (!pipelineObjects) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineObjects'];
  }


  // TODO implement code

  var ret = {
    validationWarnings: /*S1p*/[ {
      id: '',
      warnings: /*S1n*/[ '', /* ...*/ ],
    }, /* ...*/ ],
    errored: false,
    validationErrors: /*S1l*/[ {
      id: '',
      errors: /*S1n*/[ '', /* ...*/ ],
    }, /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.PutPipelineDefinition = function PutPipelineDefinition(aws) {
  var pipelineId = aws.params.pipelineId;
  var pipelineObjects = aws.params.pipelineObjects;
  var parameterValues = aws.params.parameterValues;
  var parameterObjects = aws.params.parameterObjects;
  if (!pipelineId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineId'];
  }
  if (!pipelineObjects) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineObjects'];
  }


  // TODO implement code

  var ret = {
    validationWarnings: /*S1p*/[ {
      id: '',
      warnings: /*S1n*/[ '', /* ...*/ ],
    }, /* ...*/ ],
    errored: false,
    validationErrors: /*S1l*/[ {
      id: '',
      errors: /*S1n*/[ '', /* ...*/ ],
    }, /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.CreatePipeline = function CreatePipeline(aws) {
  var name = aws.params.name;
  var uniqueId = aws.params.uniqueId;
  var tags = aws.params.tags;
  var description = aws.params.description;
  if (!name) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter name'];
  }
  if (!uniqueId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter uniqueId'];
  }


  // TODO implement code

  var ret = {
    pipelineId: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.GetPipelineDefinition = function GetPipelineDefinition(aws) {
  var pipelineId = aws.params.pipelineId;
  var version = aws.params.version;
  if (!pipelineId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineId'];
  }


  // TODO implement code

  var ret = {
    pipelineObjects: /*Sq*/[ /*Sr*/{
      name: '',
      id: '',
      fields: /*Ss*/[ {
        key: '',
        refValue: '',
        stringValue: '',
      }, /* ...*/ ],
    }, /* ...*/ ],
    parameterValues: /*S3*/[ {
      id: '',
      stringValue: '',
    }, /* ...*/ ],
    parameterObjects: /*S13*/[ {
      id: '',
      attributes: [ {
        key: '',
        stringValue: '',
      }, /* ...*/ ],
    }, /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.SetTaskStatus = function SetTaskStatus(aws) {
  var errorStackTrace = aws.params.errorStackTrace;
  var errorId = aws.params.errorId;
  var errorMessage = aws.params.errorMessage;
  var taskStatus = aws.params.taskStatus;
  var taskId = aws.params.taskId;
  if (!taskId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter taskId'];
  }
  if (!taskStatus) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter taskStatus'];
  }


  // TODO implement code

  var ret = {

  };
  return [200, ret];
};
// -----------------------------------
module.exports.DeactivatePipeline = function DeactivatePipeline(aws) {
  var pipelineId = aws.params.pipelineId;
  var cancelActive = aws.params.cancelActive /* Type boolean */;
  if (!pipelineId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineId'];
  }


  // TODO implement code

  var ret = {

  };
  return [200, ret];
};
// -----------------------------------
module.exports.AddTags = function AddTags(aws) {
  var pipelineId = aws.params.pipelineId;
  var tags = aws.params.tags;
  if (!pipelineId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineId'];
  }
  if (!tags) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter tags'];
  }


  // TODO implement code

  var ret = {

  };
  return [200, ret];
};
// -----------------------------------
module.exports.SetStatus = function SetStatus(aws) {
  var objectIds = aws.params.objectIds;
  var pipelineId = aws.params.pipelineId;
  var status = aws.params.status;
  if (!pipelineId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineId'];
  }
  if (!objectIds) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter objectIds'];
  }
  if (!status) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter status'];
  }


  // TODO implement code

  var ret = {};
  return [200, ret];
};
// -----------------------------------
module.exports.DescribePipelines = function DescribePipelines(aws) {
  var pipelineIds = aws.params.pipelineIds;
  if (!pipelineIds) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter pipelineIds'];
  }


  // TODO implement code

  var ret = {
    pipelineDescriptionList: [ {
      name: '',
      pipelineId: '',
      tags: /*Sa*/[ {
        key: '',
        value: '',
      }, /* ...*/ ],
      fields: /*Ss*/[ {
        key: '',
        refValue: '',
        stringValue: '',
      }, /* ...*/ ],
      description: '',
    }, /* ...*/ ],
  };
  return [200, ret];
};
