'use strict';

const awsCommon = require('../../lib/aws-common');

/**
 * Amazon Inspector version 2016-02-16
 *
 * --- TODO REMOVE WHEN IMPLEMENTED ---
 * AUTOGENERATED BY build-api.py
 */

// Setup input and output to use AWS protocol json
require('../../lib/aws-common/shape_http')('json', module.exports, null);
// -----------------------------------
module.exports.AddAttributesToFindings = function AddAttributesToFindings(aws) {
  var attributes = aws.params.attributes;
  var findingArns = aws.params.findingArns;
  if (!attributes) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter attributes'];
  }
  if (!findingArns) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter findingArns'];
  }


  // TODO implement code

  var ret = {
    failedItems: /*S9*/{} /*Map*/,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.CreateAssessmentTarget = function CreateAssessmentTarget(aws) {
  var assessmentTargetName = aws.params.assessmentTargetName;
  var resourceGroupArn = aws.params.resourceGroupArn;
  if (!assessmentTargetName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentTargetName'];
  }
  if (!resourceGroupArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter resourceGroupArn'];
  }


  // TODO implement code

  var ret = {
    assessmentTargetArn: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.CreateAssessmentTemplate = function CreateAssessmentTemplate(aws) {
  var assessmentTargetArn = aws.params.assessmentTargetArn;
  var assessmentTemplateName = aws.params.assessmentTemplateName;
  var durationInSeconds = aws.params.durationInSeconds /* Type integer */;
  var rulesPackageArns = aws.params.rulesPackageArns;
  var userAttributesForFindings = aws.params.userAttributesForFindings;
  if (!assessmentTargetArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentTargetArn'];
  }
  if (!assessmentTemplateName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentTemplateName'];
  }
  if (!durationInSeconds) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter durationInSeconds'];
  }
  if (!rulesPackageArns) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter rulesPackageArns'];
  }


  // TODO implement code

  var ret = {
    assessmentTemplateArn: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.CreateResourceGroup = function CreateResourceGroup(aws) {
  var resourceGroupTags = aws.params.resourceGroupTags;
  if (!resourceGroupTags) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter resourceGroupTags'];
  }


  // TODO implement code

  var ret = {
    resourceGroupArn: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.DeleteAssessmentRun = function DeleteAssessmentRun(aws) {
  var assessmentRunArn = aws.params.assessmentRunArn;
  if (!assessmentRunArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentRunArn'];
  }


  // TODO implement code

  var ret = {};
  return [200, ret];
};
// -----------------------------------
module.exports.DeleteAssessmentTarget = function DeleteAssessmentTarget(aws) {
  var assessmentTargetArn = aws.params.assessmentTargetArn;
  if (!assessmentTargetArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentTargetArn'];
  }


  // TODO implement code

  var ret = {};
  return [200, ret];
};
// -----------------------------------
module.exports.DeleteAssessmentTemplate = function DeleteAssessmentTemplate(aws) {
  var assessmentTemplateArn = aws.params.assessmentTemplateArn;
  if (!assessmentTemplateArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentTemplateArn'];
  }


  // TODO implement code

  var ret = {};
  return [200, ret];
};
// -----------------------------------
module.exports.DescribeAssessmentRuns = function DescribeAssessmentRuns(aws) {
  var assessmentRunArns = aws.params.assessmentRunArns;
  if (!assessmentRunArns) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentRunArns'];
  }


  // TODO implement code

  var ret = {
    assessmentRuns: [ {
      arn: '',
      assessmentTemplateArn: '',
      completedAt: awsCommon.timestamp(),
      createdAt: awsCommon.timestamp(),
      dataCollected: false,
      durationInSeconds: 0,
      name: '',
      notifications: [ {
        date: awsCommon.timestamp(),
        error: false,
        event: '',
        message: '',
        snsPublishStatusCode: '',
        snsTopicArn: '',
      }, /* ...*/ ],
      rulesPackageArns: [ '', /* ...*/ ],
      startedAt: awsCommon.timestamp(),
      state: '',
      stateChangedAt: awsCommon.timestamp(),
      stateChanges: [ {
        state: '',
        stateChangedAt: awsCommon.timestamp(),
      }, /* ...*/ ],
      userAttributesForFindings: /*S4*/[ /*S5*/{
        key: '',
        value: '',
      }, /* ...*/ ],
    }, /* ...*/ ],
    failedItems: /*S9*/{} /*Map*/,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.DescribeAssessmentTargets = function DescribeAssessmentTargets(aws) {
  var assessmentTargetArns = aws.params.assessmentTargetArns;
  if (!assessmentTargetArns) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentTargetArns'];
  }


  // TODO implement code

  var ret = {
    assessmentTargets: [ {
      arn: '',
      createdAt: awsCommon.timestamp(),
      name: '',
      resourceGroupArn: '',
      updatedAt: awsCommon.timestamp(),
    }, /* ...*/ ],
    failedItems: /*S9*/{} /*Map*/,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.DescribeAssessmentTemplates = function DescribeAssessmentTemplates(aws) {
  var assessmentTemplateArns = aws.params.assessmentTemplateArns;
  if (!assessmentTemplateArns) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentTemplateArns'];
  }


  // TODO implement code

  var ret = {
    assessmentTemplates: [ {
      arn: '',
      assessmentTargetArn: '',
      createdAt: awsCommon.timestamp(),
      durationInSeconds: 0,
      name: '',
      rulesPackageArns: /*Sj*/[ '', /* ...*/ ],
      userAttributesForFindings: /*S4*/[ /*S5*/{
        key: '',
        value: '',
      }, /* ...*/ ],
    }, /* ...*/ ],
    failedItems: /*S9*/{} /*Map*/,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.DescribeCrossAccountAccessRole = function DescribeCrossAccountAccessRole(aws) {


  // TODO implement code

  var ret = {
    registeredAt: awsCommon.timestamp(),
    roleArn: '',
    valid: false,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.DescribeFindings = function DescribeFindings(aws) {
  var findingArns = aws.params.findingArns;
  var locale = aws.params.locale;
  if (!findingArns) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter findingArns'];
  }


  // TODO implement code

  var ret = {
    failedItems: /*S9*/{} /*Map*/,
    findings: [ {
      arn: '',
      assetAttributes: {
        agentId: '',
        amiId: '',
        autoScalingGroup: '',
        hostname: '',
        ipv4Addresses: [ '', /* ...*/ ],
        schemaVersion: 0,
      },
      assetType: '',
      attributes: /*S24*/[ /*S5*/{
        key: '',
        value: '',
      }, /* ...*/ ],
      confidence: 0,
      createdAt: awsCommon.timestamp(),
      description: '',
      id: '',
      indicatorOfCompromise: false,
      numericSeverity: 0.0 /*Double*/,
      recommendation: '',
      schemaVersion: 0,
      service: '',
      serviceAttributes: {
        assessmentRunArn: '',
        rulesPackageArn: '',
        schemaVersion: 0,
      },
      severity: '',
      title: '',
      updatedAt: awsCommon.timestamp(),
      userAttributes: /*S4*/[ /*S5*/{
        key: '',
        value: '',
      }, /* ...*/ ],
    }, /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.DescribeResourceGroups = function DescribeResourceGroups(aws) {
  var resourceGroupArns = aws.params.resourceGroupArns;
  if (!resourceGroupArns) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter resourceGroupArns'];
  }


  // TODO implement code

  var ret = {
    failedItems: /*S9*/{} /*Map*/,
    resourceGroups: [ {
      arn: '',
      createdAt: awsCommon.timestamp(),
      tags: /*Sm*/[ {
        key: '',
        value: '',
      }, /* ...*/ ],
    }, /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.DescribeRulesPackages = function DescribeRulesPackages(aws) {
  var locale = aws.params.locale;
  var rulesPackageArns = aws.params.rulesPackageArns;
  if (!rulesPackageArns) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter rulesPackageArns'];
  }


  // TODO implement code

  var ret = {
    failedItems: /*S9*/{} /*Map*/,
    rulesPackages: [ {
      arn: '',
      description: '',
      name: '',
      provider: '',
      version: '',
    }, /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.GetTelemetryMetadata = function GetTelemetryMetadata(aws) {
  var assessmentRunArn = aws.params.assessmentRunArn;
  if (!assessmentRunArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentRunArn'];
  }


  // TODO implement code

  var ret = {
    telemetryMetadata: /*S2i*/[ {
      count: 0 /*Long*/,
      dataSize: 0 /*Long*/,
      messageType: '',
    }, /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.ListAssessmentRunAgents = function ListAssessmentRunAgents(aws) {
  var assessmentRunArn = aws.params.assessmentRunArn;
  var filter = aws.params.filter /* Type structure */;
  var maxResults = aws.params.maxResults /* Type integer */;
  var nextToken = aws.params.nextToken;
  if (!assessmentRunArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentRunArn'];
  }


  // TODO implement code

  var ret = {
    assessmentRunAgents: [ {
      agentHealth: '',
      agentHealthCode: '',
      agentHealthDetails: '',
      agentId: '',
      assessmentRunArn: '',
      autoScalingGroup: '',
      telemetryMetadata: /*S2i*/[ {
        count: 0 /*Long*/,
        dataSize: 0 /*Long*/,
        messageType: '',
      }, /* ...*/ ],
    }, /* ...*/ ],
    nextToken: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.ListAssessmentRuns = function ListAssessmentRuns(aws) {
  var assessmentTemplateArns = aws.params.assessmentTemplateArns;
  var filter = aws.params.filter /* Type structure */;
  var maxResults = aws.params.maxResults /* Type integer */;
  var nextToken = aws.params.nextToken;


  // TODO implement code

  var ret = {
    assessmentRunArns: /*S36*/[ '', /* ...*/ ],
    nextToken: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.ListAssessmentTargets = function ListAssessmentTargets(aws) {
  var filter = aws.params.filter /* Type structure */;
  var maxResults = aws.params.maxResults /* Type integer */;
  var nextToken = aws.params.nextToken;


  // TODO implement code

  var ret = {
    assessmentTargetArns: /*S36*/[ '', /* ...*/ ],
    nextToken: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.ListAssessmentTemplates = function ListAssessmentTemplates(aws) {
  var assessmentTargetArns = aws.params.assessmentTargetArns;
  var filter = aws.params.filter /* Type structure */;
  var maxResults = aws.params.maxResults /* Type integer */;
  var nextToken = aws.params.nextToken;


  // TODO implement code

  var ret = {
    assessmentTemplateArns: /*S36*/[ '', /* ...*/ ],
    nextToken: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.ListEventSubscriptions = function ListEventSubscriptions(aws) {
  var maxResults = aws.params.maxResults /* Type integer */;
  var nextToken = aws.params.nextToken;
  var resourceArn = aws.params.resourceArn;


  // TODO implement code

  var ret = {
    nextToken: '',
    subscriptions: [ {
      eventSubscriptions: [ {
        event: '',
        subscribedAt: awsCommon.timestamp(),
      }, /* ...*/ ],
      resourceArn: '',
      topicArn: '',
    }, /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.ListFindings = function ListFindings(aws) {
  var assessmentRunArns = aws.params.assessmentRunArns;
  var filter = aws.params.filter /* Type structure */;
  var maxResults = aws.params.maxResults /* Type integer */;
  var nextToken = aws.params.nextToken;


  // TODO implement code

  var ret = {
    findingArns: /*S36*/[ '', /* ...*/ ],
    nextToken: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.ListRulesPackages = function ListRulesPackages(aws) {
  var maxResults = aws.params.maxResults /* Type integer */;
  var nextToken = aws.params.nextToken;


  // TODO implement code

  var ret = {
    nextToken: '',
    rulesPackageArns: /*S36*/[ '', /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.ListTagsForResource = function ListTagsForResource(aws) {
  var resourceArn = aws.params.resourceArn;
  if (!resourceArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter resourceArn'];
  }


  // TODO implement code

  var ret = {
    tags: /*S3w*/[ {
      key: '',
      value: '',
    }, /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.PreviewAgents = function PreviewAgents(aws) {
  var maxResults = aws.params.maxResults /* Type integer */;
  var nextToken = aws.params.nextToken;
  var previewAgentsArn = aws.params.previewAgentsArn;
  if (!previewAgentsArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter previewAgentsArn'];
  }


  // TODO implement code

  var ret = {
    agentPreviews: [ {
      agentId: '',
      autoScalingGroup: '',
    }, /* ...*/ ],
    nextToken: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.RegisterCrossAccountAccessRole = function RegisterCrossAccountAccessRole(aws) {
  var roleArn = aws.params.roleArn;
  if (!roleArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter roleArn'];
  }


  // TODO implement code

  var ret = {};
  return [200, ret];
};
// -----------------------------------
module.exports.RemoveAttributesFromFindings = function RemoveAttributesFromFindings(aws) {
  var attributeKeys = aws.params.attributeKeys /* Type list */;
  var findingArns = aws.params.findingArns;
  if (!attributeKeys) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter attributeKeys'];
  }
  if (!findingArns) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter findingArns'];
  }


  // TODO implement code

  var ret = {
    failedItems: /*S9*/{} /*Map*/,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.SetTagsForResource = function SetTagsForResource(aws) {
  var resourceArn = aws.params.resourceArn;
  var tags = aws.params.tags;
  if (!resourceArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter resourceArn'];
  }


  // TODO implement code

  var ret = {};
  return [200, ret];
};
// -----------------------------------
module.exports.StartAssessmentRun = function StartAssessmentRun(aws) {
  var assessmentRunName = aws.params.assessmentRunName;
  var assessmentTemplateArn = aws.params.assessmentTemplateArn;
  if (!assessmentTemplateArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentTemplateArn'];
  }


  // TODO implement code

  var ret = {
    assessmentRunArn: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.StopAssessmentRun = function StopAssessmentRun(aws) {
  var assessmentRunArn = aws.params.assessmentRunArn;
  if (!assessmentRunArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentRunArn'];
  }


  // TODO implement code

  var ret = {};
  return [200, ret];
};
// -----------------------------------
module.exports.SubscribeToEvent = function SubscribeToEvent(aws) {
  var event = aws.params.event;
  var resourceArn = aws.params.resourceArn;
  var topicArn = aws.params.topicArn;
  if (!event) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter event'];
  }
  if (!resourceArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter resourceArn'];
  }
  if (!topicArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter topicArn'];
  }


  // TODO implement code

  var ret = {};
  return [200, ret];
};
// -----------------------------------
module.exports.UnsubscribeFromEvent = function UnsubscribeFromEvent(aws) {
  var event = aws.params.event;
  var resourceArn = aws.params.resourceArn;
  var topicArn = aws.params.topicArn;
  if (!event) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter event'];
  }
  if (!resourceArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter resourceArn'];
  }
  if (!topicArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter topicArn'];
  }


  // TODO implement code

  var ret = {};
  return [200, ret];
};
// -----------------------------------
module.exports.UpdateAssessmentTarget = function UpdateAssessmentTarget(aws) {
  var assessmentTargetArn = aws.params.assessmentTargetArn;
  var assessmentTargetName = aws.params.assessmentTargetName;
  var resourceGroupArn = aws.params.resourceGroupArn;
  if (!assessmentTargetArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentTargetArn'];
  }
  if (!assessmentTargetName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter assessmentTargetName'];
  }
  if (!resourceGroupArn) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter resourceGroupArn'];
  }


  // TODO implement code

  var ret = {};
  return [200, ret];
};
