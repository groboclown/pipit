'use strict';
const aws_common = require('../../lib/aws-common');


/**
 * Amazon CloudSearch version 2013-01-01
 *
 * --- TODO REMOVE WHEN IMPLEMENTED ---
 * AUTOGENERATED BY build-api.py
 */
module.exports.DescribeAnalysisSchemes = function DescribeAnalysisSchemes(aws) {
        var Deployed = aws.params.Deployed /* boolean */;
        var AnalysisSchemeNames = aws.params.AnalysisSchemeNames;
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }

        // TODO implement code

        var ret = {
            AnalysisSchemes: [ /*Ss*/{
                Options: /*Sl*/{
                    AnalysisSchemeLanguage: "",
                    AnalysisOptions: {
                        AlgorithmicStemming: "",
                        Stopwords: "",
                        JapaneseTokenizationDictionary: "",
                        Synonyms: "",
                        StemmingDictionary: ""
                    },
                    AnalysisSchemeName: ""
                },
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            } /*, ...*/ ]
        };
        return [200, ret];
    }
module.exports.DeleteIndexField = function DeleteIndexField(aws) {
        var IndexFieldName = aws.params.IndexFieldName;
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }        if (! IndexFieldName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter IndexFieldName"];
        }

        // TODO implement code

        var ret = {
            IndexField: /*S1n*/{
                Options: /*S13*/{
                    DoubleOptions: {
                        DefaultValue: 0.0 /*double*/,
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    LatLonOptions: {
                        DefaultValue: "",
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    IntArrayOptions: {
                        DefaultValue: 0 /*long*/,
                        SourceFields: "",
                        ReturnEnabled: false,
                        FacetEnabled: false,
                        SearchEnabled: false
                    },
                    IndexFieldType: "",
                    DateOptions: {
                        DefaultValue: "",
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    DoubleArrayOptions: {
                        DefaultValue: 0.0 /*double*/,
                        SourceFields: "",
                        ReturnEnabled: false,
                        FacetEnabled: false,
                        SearchEnabled: false
                    },
                    TextArrayOptions: {
                        DefaultValue: "",
                        SourceFields: "",
                        HighlightEnabled: false,
                        AnalysisScheme: "",
                        ReturnEnabled: false
                    },
                    DateArrayOptions: {
                        DefaultValue: "",
                        SourceFields: "",
                        ReturnEnabled: false,
                        FacetEnabled: false,
                        SearchEnabled: false
                    },
                    LiteralOptions: {
                        DefaultValue: "",
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    LiteralArrayOptions: {
                        DefaultValue: "",
                        SourceFields: "",
                        ReturnEnabled: false,
                        FacetEnabled: false,
                        SearchEnabled: false
                    },
                    IndexFieldName: "",
                    IntOptions: {
                        DefaultValue: 0 /*long*/,
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    TextOptions: {
                        DefaultValue: "",
                        SourceField: "",
                        SortEnabled: false,
                        HighlightEnabled: false,
                        AnalysisScheme: "",
                        ReturnEnabled: false
                    }
                },
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            }
        };
        return [200, ret];
    }
module.exports.IndexDocuments = function IndexDocuments(aws) {
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }

        // TODO implement code

        var ret = {
            FieldNames: /*S4*/[ "" /*, ...*/ ]
        };
        return [200, ret];
    }
module.exports.UpdateServiceAccessPolicies = function UpdateServiceAccessPolicies(aws) {
        var AccessPolicies = aws.params.AccessPolicies;
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }        if (! AccessPolicies) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter AccessPolicies"];
        }

        // TODO implement code

        var ret = {
            AccessPolicies: /*S2u*/{
                Options: "",
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            }
        };
        return [200, ret];
    }
module.exports.BuildSuggesters = function BuildSuggesters(aws) {
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }

        // TODO implement code

        var ret = {
            FieldNames: /*S4*/[ "" /*, ...*/ ]
        };
        return [200, ret];
    }
module.exports.DeleteDomain = function DeleteDomain(aws) {
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }

        // TODO implement code

        var ret = {
            DomainStatus: /*S8*/{
                DomainId: "",
                ARN: "",
                SearchInstanceType: "",
                SearchService: /*Sc*/{
                    Endpoint: ""
                },
                SearchPartitionCount: 0,
                RequiresIndexDocuments: false,
                SearchInstanceCount: 0,
                Created: false,
                DocService: /*Sc*/{
                    Endpoint: ""
                },
                Processing: false,
                Limits: {
                    MaximumPartitionCount: 0,
                    MaximumReplicationCount: 0
                },
                Deleted: false,
                DomainName: ""
            }
        };
        return [200, ret];
    }
module.exports.DescribeAvailabilityOptions = function DescribeAvailabilityOptions(aws) {
        var Deployed = aws.params.Deployed /* boolean */;
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }

        // TODO implement code

        var ret = {
            AvailabilityOptions: /*S2a*/{
                Options: false,
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            }
        };
        return [200, ret];
    }
module.exports.DescribeScalingParameters = function DescribeScalingParameters(aws) {
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }

        // TODO implement code

        var ret = {
            ScalingParameters: /*S2p*/{
                Options: /*S2q*/{
                    DesiredPartitionCount: 0,
                    DesiredInstanceType: "",
                    DesiredReplicationCount: 0
                },
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            }
        };
        return [200, ret];
    }
module.exports.DescribeSuggesters = function DescribeSuggesters(aws) {
        var Deployed = aws.params.Deployed /* boolean */;
        var SuggesterNames = aws.params.SuggesterNames;
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }

        // TODO implement code

        var ret = {
            Suggesters: [ /*S1t*/{
                Options: /*S1p*/{
                    SuggesterName: "",
                    DocumentSuggesterOptions: {
                        SortExpression: "",
                        FuzzyMatching: "",
                        SourceField: ""
                    }
                },
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            } /*, ...*/ ]
        };
        return [200, ret];
    }
module.exports.DefineAnalysisScheme = function DefineAnalysisScheme(aws) {
        var DomainName = aws.params.DomainName;
        var AnalysisScheme = aws.params.AnalysisScheme;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }        if (! AnalysisScheme) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter AnalysisScheme"];
        }

        // TODO implement code

        var ret = {
            AnalysisScheme: /*Ss*/{
                Options: /*Sl*/{
                    AnalysisSchemeLanguage: "",
                    AnalysisOptions: {
                        AlgorithmicStemming: "",
                        Stopwords: "",
                        JapaneseTokenizationDictionary: "",
                        Synonyms: "",
                        StemmingDictionary: ""
                    },
                    AnalysisSchemeName: ""
                },
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            }
        };
        return [200, ret];
    }
module.exports.DeleteAnalysisScheme = function DeleteAnalysisScheme(aws) {
        var AnalysisSchemeName = aws.params.AnalysisSchemeName;
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }        if (! AnalysisSchemeName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter AnalysisSchemeName"];
        }

        // TODO implement code

        var ret = {
            AnalysisScheme: /*Ss*/{
                Options: /*Sl*/{
                    AnalysisSchemeLanguage: "",
                    AnalysisOptions: {
                        AlgorithmicStemming: "",
                        Stopwords: "",
                        JapaneseTokenizationDictionary: "",
                        Synonyms: "",
                        StemmingDictionary: ""
                    },
                    AnalysisSchemeName: ""
                },
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            }
        };
        return [200, ret];
    }
module.exports.DescribeExpressions = function DescribeExpressions(aws) {
        var Deployed = aws.params.Deployed /* boolean */;
        var ExpressionNames = aws.params.ExpressionNames;
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }

        // TODO implement code

        var ret = {
            Expressions: [ /*S11*/{
                Options: /*Sy*/{
                    ExpressionName: "",
                    ExpressionValue: ""
                },
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            } /*, ...*/ ]
        };
        return [200, ret];
    }
module.exports.DescribeDomains = function DescribeDomains(aws) {
        var DomainNames = aws.params.DomainNames /* list */;


        // TODO implement code

        var ret = {
            DomainStatusList: [ /*S8*/{
                DomainId: "",
                ARN: "",
                SearchInstanceType: "",
                SearchService: /*Sc*/{
                    Endpoint: ""
                },
                SearchPartitionCount: 0,
                RequiresIndexDocuments: false,
                SearchInstanceCount: 0,
                Created: false,
                DocService: /*Sc*/{
                    Endpoint: ""
                },
                Processing: false,
                Limits: {
                    MaximumPartitionCount: 0,
                    MaximumReplicationCount: 0
                },
                Deleted: false,
                DomainName: ""
            } /*, ...*/ ]
        };
        return [200, ret];
    }
module.exports.CreateDomain = function CreateDomain(aws) {
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }

        // TODO implement code

        var ret = {
            DomainStatus: /*S8*/{
                DomainId: "",
                ARN: "",
                SearchInstanceType: "",
                SearchService: /*Sc*/{
                    Endpoint: ""
                },
                SearchPartitionCount: 0,
                RequiresIndexDocuments: false,
                SearchInstanceCount: 0,
                Created: false,
                DocService: /*Sc*/{
                    Endpoint: ""
                },
                Processing: false,
                Limits: {
                    MaximumPartitionCount: 0,
                    MaximumReplicationCount: 0
                },
                Deleted: false,
                DomainName: ""
            }
        };
        return [200, ret];
    }
module.exports.UpdateScalingParameters = function UpdateScalingParameters(aws) {
        var ScalingParameters = aws.params.ScalingParameters;
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }        if (! ScalingParameters) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter ScalingParameters"];
        }

        // TODO implement code

        var ret = {
            ScalingParameters: /*S2p*/{
                Options: /*S2q*/{
                    DesiredPartitionCount: 0,
                    DesiredInstanceType: "",
                    DesiredReplicationCount: 0
                },
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            }
        };
        return [200, ret];
    }
module.exports.DeleteSuggester = function DeleteSuggester(aws) {
        var SuggesterName = aws.params.SuggesterName;
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }        if (! SuggesterName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter SuggesterName"];
        }

        // TODO implement code

        var ret = {
            Suggester: /*S1t*/{
                Options: /*S1p*/{
                    SuggesterName: "",
                    DocumentSuggesterOptions: {
                        SortExpression: "",
                        FuzzyMatching: "",
                        SourceField: ""
                    }
                },
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            }
        };
        return [200, ret];
    }
module.exports.DeleteExpression = function DeleteExpression(aws) {
        var ExpressionName = aws.params.ExpressionName;
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }        if (! ExpressionName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter ExpressionName"];
        }

        // TODO implement code

        var ret = {
            Expression: /*S11*/{
                Options: /*Sy*/{
                    ExpressionName: "",
                    ExpressionValue: ""
                },
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            }
        };
        return [200, ret];
    }
module.exports.DefineIndexField = function DefineIndexField(aws) {
        var DomainName = aws.params.DomainName;
        var IndexField = aws.params.IndexField;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }        if (! IndexField) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter IndexField"];
        }

        // TODO implement code

        var ret = {
            IndexField: /*S1n*/{
                Options: /*S13*/{
                    DoubleOptions: {
                        DefaultValue: 0.0 /*double*/,
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    LatLonOptions: {
                        DefaultValue: "",
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    IntArrayOptions: {
                        DefaultValue: 0 /*long*/,
                        SourceFields: "",
                        ReturnEnabled: false,
                        FacetEnabled: false,
                        SearchEnabled: false
                    },
                    IndexFieldType: "",
                    DateOptions: {
                        DefaultValue: "",
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    DoubleArrayOptions: {
                        DefaultValue: 0.0 /*double*/,
                        SourceFields: "",
                        ReturnEnabled: false,
                        FacetEnabled: false,
                        SearchEnabled: false
                    },
                    TextArrayOptions: {
                        DefaultValue: "",
                        SourceFields: "",
                        HighlightEnabled: false,
                        AnalysisScheme: "",
                        ReturnEnabled: false
                    },
                    DateArrayOptions: {
                        DefaultValue: "",
                        SourceFields: "",
                        ReturnEnabled: false,
                        FacetEnabled: false,
                        SearchEnabled: false
                    },
                    LiteralOptions: {
                        DefaultValue: "",
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    LiteralArrayOptions: {
                        DefaultValue: "",
                        SourceFields: "",
                        ReturnEnabled: false,
                        FacetEnabled: false,
                        SearchEnabled: false
                    },
                    IndexFieldName: "",
                    IntOptions: {
                        DefaultValue: 0 /*long*/,
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    TextOptions: {
                        DefaultValue: "",
                        SourceField: "",
                        SortEnabled: false,
                        HighlightEnabled: false,
                        AnalysisScheme: "",
                        ReturnEnabled: false
                    }
                },
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            }
        };
        return [200, ret];
    }
module.exports.DescribeIndexFields = function DescribeIndexFields(aws) {
        var Deployed = aws.params.Deployed /* boolean */;
        var DomainName = aws.params.DomainName;
        var FieldNames = aws.params.FieldNames /* list */;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }

        // TODO implement code

        var ret = {
            IndexFields: [ /*S1n*/{
                Options: /*S13*/{
                    DoubleOptions: {
                        DefaultValue: 0.0 /*double*/,
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    LatLonOptions: {
                        DefaultValue: "",
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    IntArrayOptions: {
                        DefaultValue: 0 /*long*/,
                        SourceFields: "",
                        ReturnEnabled: false,
                        FacetEnabled: false,
                        SearchEnabled: false
                    },
                    IndexFieldType: "",
                    DateOptions: {
                        DefaultValue: "",
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    DoubleArrayOptions: {
                        DefaultValue: 0.0 /*double*/,
                        SourceFields: "",
                        ReturnEnabled: false,
                        FacetEnabled: false,
                        SearchEnabled: false
                    },
                    TextArrayOptions: {
                        DefaultValue: "",
                        SourceFields: "",
                        HighlightEnabled: false,
                        AnalysisScheme: "",
                        ReturnEnabled: false
                    },
                    DateArrayOptions: {
                        DefaultValue: "",
                        SourceFields: "",
                        ReturnEnabled: false,
                        FacetEnabled: false,
                        SearchEnabled: false
                    },
                    LiteralOptions: {
                        DefaultValue: "",
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    LiteralArrayOptions: {
                        DefaultValue: "",
                        SourceFields: "",
                        ReturnEnabled: false,
                        FacetEnabled: false,
                        SearchEnabled: false
                    },
                    IndexFieldName: "",
                    IntOptions: {
                        DefaultValue: 0 /*long*/,
                        FacetEnabled: false,
                        SourceField: "",
                        SearchEnabled: false,
                        SortEnabled: false,
                        ReturnEnabled: false
                    },
                    TextOptions: {
                        DefaultValue: "",
                        SourceField: "",
                        SortEnabled: false,
                        HighlightEnabled: false,
                        AnalysisScheme: "",
                        ReturnEnabled: false
                    }
                },
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            } /*, ...*/ ]
        };
        return [200, ret];
    }
module.exports.UpdateAvailabilityOptions = function UpdateAvailabilityOptions(aws) {
        var MultiAZ = aws.params.MultiAZ /* boolean */;
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }        if (! MultiAZ) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter MultiAZ"];
        }

        // TODO implement code

        var ret = {
            AvailabilityOptions: /*S2a*/{
                Options: false,
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            }
        };
        return [200, ret];
    }
module.exports.DescribeServiceAccessPolicies = function DescribeServiceAccessPolicies(aws) {
        var Deployed = aws.params.Deployed /* boolean */;
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }

        // TODO implement code

        var ret = {
            AccessPolicies: /*S2u*/{
                Options: "",
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            }
        };
        return [200, ret];
    }
module.exports.ListDomainNames = function ListDomainNames(aws) {


        // TODO implement code

        var ret = {
            DomainNames: {} /* map */
        };
        return [200, ret];
    }
module.exports.DefineExpression = function DefineExpression(aws) {
        var DomainName = aws.params.DomainName;
        var Expression = aws.params.Expression;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }        if (! Expression) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Expression"];
        }

        // TODO implement code

        var ret = {
            Expression: /*S11*/{
                Options: /*Sy*/{
                    ExpressionName: "",
                    ExpressionValue: ""
                },
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            }
        };
        return [200, ret];
    }
module.exports.DefineSuggester = function DefineSuggester(aws) {
        var Suggester = aws.params.Suggester;
        var DomainName = aws.params.DomainName;
        if (! DomainName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter DomainName"];
        }        if (! Suggester) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Suggester"];
        }

        // TODO implement code

        var ret = {
            Suggester: /*S1t*/{
                Options: /*S1p*/{
                    SuggesterName: "",
                    DocumentSuggesterOptions: {
                        SortExpression: "",
                        FuzzyMatching: "",
                        SourceField: ""
                    }
                },
                Status: /*St*/{
                    UpdateDate: now(),
                    UpdateVersion: 0,
                    State: "",
                    CreationDate: now(),
                    PendingDeletion: false
                }
            }
        };
        return [200, ret];
    }
