'use strict';
const aws_common = require('../../lib/aws-common');


/**
 * Amazon Elastic Transcoder version 2012-09-25
 *
 * --- TODO REMOVE WHEN IMPLEMENTED ---
 * AUTOGENERATED BY build-api.py
 */
module.exports.ReadPipeline = aws_common.as(
    "GET",
    "/2012-09-25/pipelines/:Id",
    function ReadPipeline(aws) {
        var Id = aws.reqParams.Id;
        if (! Id) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Id"];
        }

        // TODO implement code

        var ret = {
            Pipeline: /*S2i*/{
                Name: "",
                Notifications: /*S27*/{
                    Progressing: "",
                    Warning: "",
                    Error: "",
                    Completed: ""
                },
                ContentConfig: /*S29*/{
                    Bucket: "",
                    StorageClass: "",
                    Permissions: [ {
                        GranteeType: "",
                        Grantee: "",
                        Access: [ "" /*, ...*/ ]
                    } /*, ...*/ ]
                },
                AwsKmsKeyArn: "",
                ThumbnailConfig: /*S29*/{
                    Bucket: "",
                    StorageClass: "",
                    Permissions: [ {
                        GranteeType: "",
                        Grantee: "",
                        Access: [ "" /*, ...*/ ]
                    } /*, ...*/ ]
                },
                Arn: "",
                InputBucket: "",
                Id: "",
                Role: "",
                OutputBucket: "",
                Status: ""
            },
            Warnings: /*S2k*/[ {
                Message: "",
                Code: ""
            } /*, ...*/ ]
        };
        return [200, ret];
    });
module.exports.ListPresets = aws_common.as(
    "GET",
    "/2012-09-25/presets",
    function ListPresets(aws) {
        var Ascending = aws.params.Ascending;
        var PageToken = aws.params.PageToken;


        // TODO implement code

        var ret = {
            NextPageToken: "",
            Presets: [ /*S3j*/{
                Name: "",
                Id: "",
                Container: "",
                Arn: "",
                Type: "",
                Video: /*S2o*/{
                    CodecOptions: {} /* map */,
                    KeyframesMaxDist: "",
                    AspectRatio: "",
                    BitRate: "",
                    Watermarks: [ {
                        Opacity: "",
                        HorizontalAlign: "",
                        VerticalAlign: "",
                        Target: "",
                        MaxHeight: "",
                        HorizontalOffset: "",
                        VerticalOffset: "",
                        Id: "",
                        MaxWidth: "",
                        SizingPolicy: ""
                    } /*, ...*/ ],
                    MaxHeight: "",
                    SizingPolicy: "",
                    MaxFrameRate: "",
                    PaddingPolicy: "",
                    FixedGOP: "",
                    MaxWidth: "",
                    Codec: "",
                    DisplayAspectRatio: "",
                    FrameRate: "",
                    Resolution: ""
                },
                Description: "",
                Thumbnails: /*S3f*/{
                    Interval: "",
                    MaxHeight: "",
                    AspectRatio: "",
                    MaxWidth: "",
                    Format: "",
                    Resolution: "",
                    SizingPolicy: "",
                    PaddingPolicy: ""
                },
                Audio: /*S34*/{
                    CodecOptions: {
                        BitOrder: "",
                        Signed: "",
                        BitDepth: "",
                        Profile: ""
                    },
                    SampleRate: "",
                    Channels: "",
                    BitRate: "",
                    Codec: "",
                    AudioPackingMode: ""
                }
            } /*, ...*/ ]
        };
        return [200, ret];
    });
module.exports.UpdatePipelineNotifications = aws_common.as(
    "/2012-09-25/pipelines/:Id/notifications",
    function UpdatePipelineNotifications(aws) {
        var Notifications = aws.params.Notifications;
        var Id = aws.reqParams.Id;
        if (! Id) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Id"];
        }        if (! Notifications) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Notifications"];
        }

        // TODO implement code

        var ret = {
            Pipeline: /*S2i*/{
                Name: "",
                Notifications: /*S27*/{
                    Progressing: "",
                    Warning: "",
                    Error: "",
                    Completed: ""
                },
                ContentConfig: /*S29*/{
                    Bucket: "",
                    StorageClass: "",
                    Permissions: [ {
                        GranteeType: "",
                        Grantee: "",
                        Access: [ "" /*, ...*/ ]
                    } /*, ...*/ ]
                },
                AwsKmsKeyArn: "",
                ThumbnailConfig: /*S29*/{
                    Bucket: "",
                    StorageClass: "",
                    Permissions: [ {
                        GranteeType: "",
                        Grantee: "",
                        Access: [ "" /*, ...*/ ]
                    } /*, ...*/ ]
                },
                Arn: "",
                InputBucket: "",
                Id: "",
                Role: "",
                OutputBucket: "",
                Status: ""
            }
        };
        return [200, ret];
    });
module.exports.ListPipelines = aws_common.as(
    "GET",
    "/2012-09-25/pipelines",
    function ListPipelines(aws) {
        var Ascending = aws.params.Ascending;
        var PageToken = aws.params.PageToken;


        // TODO implement code

        var ret = {
            NextPageToken: "",
            Pipelines: [ /*S2i*/{
                Name: "",
                Notifications: /*S27*/{
                    Progressing: "",
                    Warning: "",
                    Error: "",
                    Completed: ""
                },
                ContentConfig: /*S29*/{
                    Bucket: "",
                    StorageClass: "",
                    Permissions: [ {
                        GranteeType: "",
                        Grantee: "",
                        Access: [ "" /*, ...*/ ]
                    } /*, ...*/ ]
                },
                AwsKmsKeyArn: "",
                ThumbnailConfig: /*S29*/{
                    Bucket: "",
                    StorageClass: "",
                    Permissions: [ {
                        GranteeType: "",
                        Grantee: "",
                        Access: [ "" /*, ...*/ ]
                    } /*, ...*/ ]
                },
                Arn: "",
                InputBucket: "",
                Id: "",
                Role: "",
                OutputBucket: "",
                Status: ""
            } /*, ...*/ ]
        };
        return [200, ret];
    });
module.exports.ListJobsByPipeline = aws_common.as(
    "GET",
    "/2012-09-25/jobsByPipeline/:PipelineId",
    function ListJobsByPipeline(aws) {
        var Ascending = aws.params.Ascending;
        var PipelineId = aws.reqParams.PipelineId;
        var PageToken = aws.params.PageToken;
        if (! PipelineId) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter PipelineId"];
        }

        // TODO implement code

        var ret = {
            NextPageToken: "",
            Jobs: /*S3s*/[ /*S1v*/{
                UserMetadata: /*S1s*/{} /* map */,
                Input: /*S5*/{
                    Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    Key: "",
                    Container: "",
                    AspectRatio: "",
                    Resolution: "",
                    FrameRate: "",
                    Interlaced: "",
                    DetectedProperties: {
                        FileSize: 0 /*long*/,
                        Height: 0,
                        FrameRate: "",
                        DurationMillis: 0 /*long*/,
                        Width: 0
                    }
                },
                Outputs: [ /*S1w*/{
                    Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    AppliedColorSpaceConversion: "",
                    DurationMillis: 0 /*long*/,
                    Watermarks: /*Sn*/[ {
                        PresetWatermarkId: "",
                        InputKey: "",
                        Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                    } /*, ...*/ ],
                    Captions: /*S13*/{
                        MergePolicy: "",
                        CaptionFormats: [ {
                            Format: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            Pattern: ""
                        } /*, ...*/ ],
                        CaptionSources: [ {
                            Label: "",
                            Language: "",
                            Key: "",
                            TimeOffset: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                        } /*, ...*/ ]
                    },
                    FrameRate: "",
                    ThumbnailEncryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    Id: "",
                    AlbumArt: /*Sr*/{
                        MergePolicy: "",
                        Artwork: [ {
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            AlbumArtFormat: "",
                            InputKey: "",
                            MaxHeight: "",
                            MaxWidth: "",
                            PaddingPolicy: "",
                            SizingPolicy: ""
                        } /*, ...*/ ]
                    },
                    SegmentDuration: "",
                    Duration: 0 /*long*/,
                    Composition: /*Sz*/[ {
                        TimeSpan: {
                            Duration: "",
                            StartTime: ""
                        }
                    } /*, ...*/ ],
                    ThumbnailPattern: "",
                    Key: "",
                    StatusDetail: "",
                    Height: 0,
                    Width: 0,
                    PresetId: "",
                    FileSize: 0 /*long*/,
                    Rotate: "",
                    Status: ""
                } /*, ...*/ ],
                Arn: "",
                PipelineId: "",
                Timing: {
                    FinishTimeMillis: 0 /*long*/,
                    SubmitTimeMillis: 0 /*long*/,
                    StartTimeMillis: 0 /*long*/
                },
                Playlists: [ {
                    Name: "",
                    StatusDetail: "",
                    OutputKeys: /*S1i*/[ "" /*, ...*/ ],
                    PlayReadyDrm: /*S1n*/{
                        InitializationVector: "",
                        Key: "",
                        KeyId: "",
                        Format: "",
                        LicenseAcquisitionUrl: "",
                        KeyMd5: ""
                    },
                    Format: "",
                    HlsContentProtection: /*S1j*/{
                        InitializationVector: "",
                        Key: "",
                        Method: "",
                        LicenseAcquisitionUrl: "",
                        KeyMd5: "",
                        KeyStoragePolicy: ""
                    },
                    Status: ""
                } /*, ...*/ ],
                Id: "",
                OutputKeyPrefix: "",
                Status: "",
                Output: /*S1w*/{
                    Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    AppliedColorSpaceConversion: "",
                    DurationMillis: 0 /*long*/,
                    Watermarks: /*Sn*/[ {
                        PresetWatermarkId: "",
                        InputKey: "",
                        Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                    } /*, ...*/ ],
                    Captions: /*S13*/{
                        MergePolicy: "",
                        CaptionFormats: [ {
                            Format: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            Pattern: ""
                        } /*, ...*/ ],
                        CaptionSources: [ {
                            Label: "",
                            Language: "",
                            Key: "",
                            TimeOffset: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                        } /*, ...*/ ]
                    },
                    FrameRate: "",
                    ThumbnailEncryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    Id: "",
                    AlbumArt: /*Sr*/{
                        MergePolicy: "",
                        Artwork: [ {
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            AlbumArtFormat: "",
                            InputKey: "",
                            MaxHeight: "",
                            MaxWidth: "",
                            PaddingPolicy: "",
                            SizingPolicy: ""
                        } /*, ...*/ ]
                    },
                    SegmentDuration: "",
                    Duration: 0 /*long*/,
                    Composition: /*Sz*/[ {
                        TimeSpan: {
                            Duration: "",
                            StartTime: ""
                        }
                    } /*, ...*/ ],
                    ThumbnailPattern: "",
                    Key: "",
                    StatusDetail: "",
                    Height: 0,
                    Width: 0,
                    PresetId: "",
                    FileSize: 0 /*long*/,
                    Rotate: "",
                    Status: ""
                }
            } /*, ...*/ ]
        };
        return [200, ret];
    });
module.exports.DeletePreset = aws_common.as(
    "DELETE",
    "/2012-09-25/presets/:Id",
    function DeletePreset(aws) {
        var Id = aws.reqParams.Id;
        if (! Id) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Id"];
        }

        // TODO implement code

        var ret = {

        };
        return [202, ret];
    });
module.exports.CreatePreset = aws_common.as(
    "/2012-09-25/presets",
    function CreatePreset(aws) {
        var Name = aws.params.Name;
        var Container = aws.params.Container;
        var Video = aws.params.Video;
        var Description = aws.params.Description;
        var Thumbnails = aws.params.Thumbnails;
        var Audio = aws.params.Audio;
        if (! Name) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Name"];
        }        if (! Container) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Container"];
        }

        // TODO implement code

        var ret = {
            Warning: "",
            Preset: /*S3j*/{
                Name: "",
                Id: "",
                Container: "",
                Arn: "",
                Type: "",
                Video: /*S2o*/{
                    CodecOptions: {} /* map */,
                    KeyframesMaxDist: "",
                    AspectRatio: "",
                    BitRate: "",
                    Watermarks: [ {
                        Opacity: "",
                        HorizontalAlign: "",
                        VerticalAlign: "",
                        Target: "",
                        MaxHeight: "",
                        HorizontalOffset: "",
                        VerticalOffset: "",
                        Id: "",
                        MaxWidth: "",
                        SizingPolicy: ""
                    } /*, ...*/ ],
                    MaxHeight: "",
                    SizingPolicy: "",
                    MaxFrameRate: "",
                    PaddingPolicy: "",
                    FixedGOP: "",
                    MaxWidth: "",
                    Codec: "",
                    DisplayAspectRatio: "",
                    FrameRate: "",
                    Resolution: ""
                },
                Description: "",
                Thumbnails: /*S3f*/{
                    Interval: "",
                    MaxHeight: "",
                    AspectRatio: "",
                    MaxWidth: "",
                    Format: "",
                    Resolution: "",
                    SizingPolicy: "",
                    PaddingPolicy: ""
                },
                Audio: /*S34*/{
                    CodecOptions: {
                        BitOrder: "",
                        Signed: "",
                        BitDepth: "",
                        Profile: ""
                    },
                    SampleRate: "",
                    Channels: "",
                    BitRate: "",
                    Codec: "",
                    AudioPackingMode: ""
                }
            }
        };
        return [201, ret];
    });
module.exports.UpdatePipeline = aws_common.as(
    "PUT",
    "/2012-09-25/pipelines/:Id",
    function UpdatePipeline(aws) {
        var Name = aws.params.Name;
        var Notifications = aws.params.Notifications;
        var ContentConfig = aws.params.ContentConfig;
        var AwsKmsKeyArn = aws.params.AwsKmsKeyArn;
        var ThumbnailConfig = aws.params.ThumbnailConfig;
        var InputBucket = aws.params.InputBucket;
        var Id = aws.reqParams.Id;
        var Role = aws.params.Role;
        if (! Id) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Id"];
        }

        // TODO implement code

        var ret = {
            Pipeline: /*S2i*/{
                Name: "",
                Notifications: /*S27*/{
                    Progressing: "",
                    Warning: "",
                    Error: "",
                    Completed: ""
                },
                ContentConfig: /*S29*/{
                    Bucket: "",
                    StorageClass: "",
                    Permissions: [ {
                        GranteeType: "",
                        Grantee: "",
                        Access: [ "" /*, ...*/ ]
                    } /*, ...*/ ]
                },
                AwsKmsKeyArn: "",
                ThumbnailConfig: /*S29*/{
                    Bucket: "",
                    StorageClass: "",
                    Permissions: [ {
                        GranteeType: "",
                        Grantee: "",
                        Access: [ "" /*, ...*/ ]
                    } /*, ...*/ ]
                },
                Arn: "",
                InputBucket: "",
                Id: "",
                Role: "",
                OutputBucket: "",
                Status: ""
            },
            Warnings: /*S2k*/[ {
                Message: "",
                Code: ""
            } /*, ...*/ ]
        };
        return [200, ret];
    });
module.exports.DeletePipeline = aws_common.as(
    "DELETE",
    "/2012-09-25/pipelines/:Id",
    function DeletePipeline(aws) {
        var Id = aws.reqParams.Id;
        if (! Id) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Id"];
        }

        // TODO implement code

        var ret = {

        };
        return [202, ret];
    });
module.exports.CancelJob = aws_common.as(
    "DELETE",
    "/2012-09-25/jobs/:Id",
    function CancelJob(aws) {
        var Id = aws.reqParams.Id;
        if (! Id) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Id"];
        }

        // TODO implement code

        var ret = {

        };
        return [202, ret];
    });
module.exports.CreateJob = aws_common.as(
    "/2012-09-25/jobs",
    function CreateJob(aws) {
        var UserMetadata = aws.params.UserMetadata;
        var Input = aws.params.Input;
        var Output = aws.params.Output;
        var PipelineId = aws.params.PipelineId;
        var Playlists = aws.params.Playlists /* list */;
        var Outputs = aws.params.Outputs /* list */;
        var OutputKeyPrefix = aws.params.OutputKeyPrefix;
        if (! PipelineId) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter PipelineId"];
        }        if (! Input) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Input"];
        }

        // TODO implement code

        var ret = {
            Job: /*S1v*/{
                UserMetadata: /*S1s*/{} /* map */,
                Input: /*S5*/{
                    Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    Key: "",
                    Container: "",
                    AspectRatio: "",
                    Resolution: "",
                    FrameRate: "",
                    Interlaced: "",
                    DetectedProperties: {
                        FileSize: 0 /*long*/,
                        Height: 0,
                        FrameRate: "",
                        DurationMillis: 0 /*long*/,
                        Width: 0
                    }
                },
                Outputs: [ /*S1w*/{
                    Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    AppliedColorSpaceConversion: "",
                    DurationMillis: 0 /*long*/,
                    Watermarks: /*Sn*/[ {
                        PresetWatermarkId: "",
                        InputKey: "",
                        Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                    } /*, ...*/ ],
                    Captions: /*S13*/{
                        MergePolicy: "",
                        CaptionFormats: [ {
                            Format: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            Pattern: ""
                        } /*, ...*/ ],
                        CaptionSources: [ {
                            Label: "",
                            Language: "",
                            Key: "",
                            TimeOffset: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                        } /*, ...*/ ]
                    },
                    FrameRate: "",
                    ThumbnailEncryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    Id: "",
                    AlbumArt: /*Sr*/{
                        MergePolicy: "",
                        Artwork: [ {
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            AlbumArtFormat: "",
                            InputKey: "",
                            MaxHeight: "",
                            MaxWidth: "",
                            PaddingPolicy: "",
                            SizingPolicy: ""
                        } /*, ...*/ ]
                    },
                    SegmentDuration: "",
                    Duration: 0 /*long*/,
                    Composition: /*Sz*/[ {
                        TimeSpan: {
                            Duration: "",
                            StartTime: ""
                        }
                    } /*, ...*/ ],
                    ThumbnailPattern: "",
                    Key: "",
                    StatusDetail: "",
                    Height: 0,
                    Width: 0,
                    PresetId: "",
                    FileSize: 0 /*long*/,
                    Rotate: "",
                    Status: ""
                } /*, ...*/ ],
                Arn: "",
                PipelineId: "",
                Timing: {
                    FinishTimeMillis: 0 /*long*/,
                    SubmitTimeMillis: 0 /*long*/,
                    StartTimeMillis: 0 /*long*/
                },
                Playlists: [ {
                    Name: "",
                    StatusDetail: "",
                    OutputKeys: /*S1i*/[ "" /*, ...*/ ],
                    PlayReadyDrm: /*S1n*/{
                        InitializationVector: "",
                        Key: "",
                        KeyId: "",
                        Format: "",
                        LicenseAcquisitionUrl: "",
                        KeyMd5: ""
                    },
                    Format: "",
                    HlsContentProtection: /*S1j*/{
                        InitializationVector: "",
                        Key: "",
                        Method: "",
                        LicenseAcquisitionUrl: "",
                        KeyMd5: "",
                        KeyStoragePolicy: ""
                    },
                    Status: ""
                } /*, ...*/ ],
                Id: "",
                OutputKeyPrefix: "",
                Status: "",
                Output: /*S1w*/{
                    Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    AppliedColorSpaceConversion: "",
                    DurationMillis: 0 /*long*/,
                    Watermarks: /*Sn*/[ {
                        PresetWatermarkId: "",
                        InputKey: "",
                        Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                    } /*, ...*/ ],
                    Captions: /*S13*/{
                        MergePolicy: "",
                        CaptionFormats: [ {
                            Format: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            Pattern: ""
                        } /*, ...*/ ],
                        CaptionSources: [ {
                            Label: "",
                            Language: "",
                            Key: "",
                            TimeOffset: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                        } /*, ...*/ ]
                    },
                    FrameRate: "",
                    ThumbnailEncryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    Id: "",
                    AlbumArt: /*Sr*/{
                        MergePolicy: "",
                        Artwork: [ {
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            AlbumArtFormat: "",
                            InputKey: "",
                            MaxHeight: "",
                            MaxWidth: "",
                            PaddingPolicy: "",
                            SizingPolicy: ""
                        } /*, ...*/ ]
                    },
                    SegmentDuration: "",
                    Duration: 0 /*long*/,
                    Composition: /*Sz*/[ {
                        TimeSpan: {
                            Duration: "",
                            StartTime: ""
                        }
                    } /*, ...*/ ],
                    ThumbnailPattern: "",
                    Key: "",
                    StatusDetail: "",
                    Height: 0,
                    Width: 0,
                    PresetId: "",
                    FileSize: 0 /*long*/,
                    Rotate: "",
                    Status: ""
                }
            }
        };
        return [201, ret];
    });
module.exports.ReadPreset = aws_common.as(
    "GET",
    "/2012-09-25/presets/:Id",
    function ReadPreset(aws) {
        var Id = aws.reqParams.Id;
        if (! Id) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Id"];
        }

        // TODO implement code

        var ret = {
            Preset: /*S3j*/{
                Name: "",
                Id: "",
                Container: "",
                Arn: "",
                Type: "",
                Video: /*S2o*/{
                    CodecOptions: {} /* map */,
                    KeyframesMaxDist: "",
                    AspectRatio: "",
                    BitRate: "",
                    Watermarks: [ {
                        Opacity: "",
                        HorizontalAlign: "",
                        VerticalAlign: "",
                        Target: "",
                        MaxHeight: "",
                        HorizontalOffset: "",
                        VerticalOffset: "",
                        Id: "",
                        MaxWidth: "",
                        SizingPolicy: ""
                    } /*, ...*/ ],
                    MaxHeight: "",
                    SizingPolicy: "",
                    MaxFrameRate: "",
                    PaddingPolicy: "",
                    FixedGOP: "",
                    MaxWidth: "",
                    Codec: "",
                    DisplayAspectRatio: "",
                    FrameRate: "",
                    Resolution: ""
                },
                Description: "",
                Thumbnails: /*S3f*/{
                    Interval: "",
                    MaxHeight: "",
                    AspectRatio: "",
                    MaxWidth: "",
                    Format: "",
                    Resolution: "",
                    SizingPolicy: "",
                    PaddingPolicy: ""
                },
                Audio: /*S34*/{
                    CodecOptions: {
                        BitOrder: "",
                        Signed: "",
                        BitDepth: "",
                        Profile: ""
                    },
                    SampleRate: "",
                    Channels: "",
                    BitRate: "",
                    Codec: "",
                    AudioPackingMode: ""
                }
            }
        };
        return [200, ret];
    });
module.exports.UpdatePipelineStatus = aws_common.as(
    "/2012-09-25/pipelines/:Id/status",
    function UpdatePipelineStatus(aws) {
        var Id = aws.reqParams.Id;
        var Status = aws.params.Status;
        if (! Id) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Id"];
        }        if (! Status) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Status"];
        }

        // TODO implement code

        var ret = {
            Pipeline: /*S2i*/{
                Name: "",
                Notifications: /*S27*/{
                    Progressing: "",
                    Warning: "",
                    Error: "",
                    Completed: ""
                },
                ContentConfig: /*S29*/{
                    Bucket: "",
                    StorageClass: "",
                    Permissions: [ {
                        GranteeType: "",
                        Grantee: "",
                        Access: [ "" /*, ...*/ ]
                    } /*, ...*/ ]
                },
                AwsKmsKeyArn: "",
                ThumbnailConfig: /*S29*/{
                    Bucket: "",
                    StorageClass: "",
                    Permissions: [ {
                        GranteeType: "",
                        Grantee: "",
                        Access: [ "" /*, ...*/ ]
                    } /*, ...*/ ]
                },
                Arn: "",
                InputBucket: "",
                Id: "",
                Role: "",
                OutputBucket: "",
                Status: ""
            }
        };
        return [200, ret];
    });
module.exports.CreatePipeline = aws_common.as(
    "/2012-09-25/pipelines",
    function CreatePipeline(aws) {
        var Name = aws.params.Name;
        var Notifications = aws.params.Notifications;
        var ContentConfig = aws.params.ContentConfig;
        var ThumbnailConfig = aws.params.ThumbnailConfig;
        var InputBucket = aws.params.InputBucket;
        var AwsKmsKeyArn = aws.params.AwsKmsKeyArn;
        var OutputBucket = aws.params.OutputBucket;
        var Role = aws.params.Role;
        if (! Name) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Name"];
        }        if (! InputBucket) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter InputBucket"];
        }        if (! Role) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Role"];
        }

        // TODO implement code

        var ret = {
            Pipeline: /*S2i*/{
                Name: "",
                Notifications: /*S27*/{
                    Progressing: "",
                    Warning: "",
                    Error: "",
                    Completed: ""
                },
                ContentConfig: /*S29*/{
                    Bucket: "",
                    StorageClass: "",
                    Permissions: [ {
                        GranteeType: "",
                        Grantee: "",
                        Access: [ "" /*, ...*/ ]
                    } /*, ...*/ ]
                },
                AwsKmsKeyArn: "",
                ThumbnailConfig: /*S29*/{
                    Bucket: "",
                    StorageClass: "",
                    Permissions: [ {
                        GranteeType: "",
                        Grantee: "",
                        Access: [ "" /*, ...*/ ]
                    } /*, ...*/ ]
                },
                Arn: "",
                InputBucket: "",
                Id: "",
                Role: "",
                OutputBucket: "",
                Status: ""
            },
            Warnings: /*S2k*/[ {
                Message: "",
                Code: ""
            } /*, ...*/ ]
        };
        return [201, ret];
    });
module.exports.ReadJob = aws_common.as(
    "GET",
    "/2012-09-25/jobs/:Id",
    function ReadJob(aws) {
        var Id = aws.reqParams.Id;
        if (! Id) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Id"];
        }

        // TODO implement code

        var ret = {
            Job: /*S1v*/{
                UserMetadata: /*S1s*/{} /* map */,
                Input: /*S5*/{
                    Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    Key: "",
                    Container: "",
                    AspectRatio: "",
                    Resolution: "",
                    FrameRate: "",
                    Interlaced: "",
                    DetectedProperties: {
                        FileSize: 0 /*long*/,
                        Height: 0,
                        FrameRate: "",
                        DurationMillis: 0 /*long*/,
                        Width: 0
                    }
                },
                Outputs: [ /*S1w*/{
                    Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    AppliedColorSpaceConversion: "",
                    DurationMillis: 0 /*long*/,
                    Watermarks: /*Sn*/[ {
                        PresetWatermarkId: "",
                        InputKey: "",
                        Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                    } /*, ...*/ ],
                    Captions: /*S13*/{
                        MergePolicy: "",
                        CaptionFormats: [ {
                            Format: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            Pattern: ""
                        } /*, ...*/ ],
                        CaptionSources: [ {
                            Label: "",
                            Language: "",
                            Key: "",
                            TimeOffset: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                        } /*, ...*/ ]
                    },
                    FrameRate: "",
                    ThumbnailEncryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    Id: "",
                    AlbumArt: /*Sr*/{
                        MergePolicy: "",
                        Artwork: [ {
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            AlbumArtFormat: "",
                            InputKey: "",
                            MaxHeight: "",
                            MaxWidth: "",
                            PaddingPolicy: "",
                            SizingPolicy: ""
                        } /*, ...*/ ]
                    },
                    SegmentDuration: "",
                    Duration: 0 /*long*/,
                    Composition: /*Sz*/[ {
                        TimeSpan: {
                            Duration: "",
                            StartTime: ""
                        }
                    } /*, ...*/ ],
                    ThumbnailPattern: "",
                    Key: "",
                    StatusDetail: "",
                    Height: 0,
                    Width: 0,
                    PresetId: "",
                    FileSize: 0 /*long*/,
                    Rotate: "",
                    Status: ""
                } /*, ...*/ ],
                Arn: "",
                PipelineId: "",
                Timing: {
                    FinishTimeMillis: 0 /*long*/,
                    SubmitTimeMillis: 0 /*long*/,
                    StartTimeMillis: 0 /*long*/
                },
                Playlists: [ {
                    Name: "",
                    StatusDetail: "",
                    OutputKeys: /*S1i*/[ "" /*, ...*/ ],
                    PlayReadyDrm: /*S1n*/{
                        InitializationVector: "",
                        Key: "",
                        KeyId: "",
                        Format: "",
                        LicenseAcquisitionUrl: "",
                        KeyMd5: ""
                    },
                    Format: "",
                    HlsContentProtection: /*S1j*/{
                        InitializationVector: "",
                        Key: "",
                        Method: "",
                        LicenseAcquisitionUrl: "",
                        KeyMd5: "",
                        KeyStoragePolicy: ""
                    },
                    Status: ""
                } /*, ...*/ ],
                Id: "",
                OutputKeyPrefix: "",
                Status: "",
                Output: /*S1w*/{
                    Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    AppliedColorSpaceConversion: "",
                    DurationMillis: 0 /*long*/,
                    Watermarks: /*Sn*/[ {
                        PresetWatermarkId: "",
                        InputKey: "",
                        Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                    } /*, ...*/ ],
                    Captions: /*S13*/{
                        MergePolicy: "",
                        CaptionFormats: [ {
                            Format: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            Pattern: ""
                        } /*, ...*/ ],
                        CaptionSources: [ {
                            Label: "",
                            Language: "",
                            Key: "",
                            TimeOffset: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                        } /*, ...*/ ]
                    },
                    FrameRate: "",
                    ThumbnailEncryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    Id: "",
                    AlbumArt: /*Sr*/{
                        MergePolicy: "",
                        Artwork: [ {
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            AlbumArtFormat: "",
                            InputKey: "",
                            MaxHeight: "",
                            MaxWidth: "",
                            PaddingPolicy: "",
                            SizingPolicy: ""
                        } /*, ...*/ ]
                    },
                    SegmentDuration: "",
                    Duration: 0 /*long*/,
                    Composition: /*Sz*/[ {
                        TimeSpan: {
                            Duration: "",
                            StartTime: ""
                        }
                    } /*, ...*/ ],
                    ThumbnailPattern: "",
                    Key: "",
                    StatusDetail: "",
                    Height: 0,
                    Width: 0,
                    PresetId: "",
                    FileSize: 0 /*long*/,
                    Rotate: "",
                    Status: ""
                }
            }
        };
        return [200, ret];
    });
module.exports.TestRole = aws_common.as(
    "/2012-09-25/roleTests",
    function TestRole(aws) {
        var InputBucket = aws.params.InputBucket;
        var OutputBucket = aws.params.OutputBucket;
        var Topics = aws.params.Topics /* list */;
        var Role = aws.params.Role;
        if (! Role) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Role"];
        }        if (! InputBucket) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter InputBucket"];
        }        if (! OutputBucket) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter OutputBucket"];
        }        if (! Topics) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Topics"];
        }

        // TODO implement code

        var ret = {
            Success: "",
            Messages: [ "" /*, ...*/ ]
        };
        return [200, ret];
    });
module.exports.ListJobsByStatus = aws_common.as(
    "GET",
    "/2012-09-25/jobsByStatus/:Status",
    function ListJobsByStatus(aws) {
        var PageToken = aws.params.PageToken;
        var Ascending = aws.params.Ascending;
        var Status = aws.reqParams.Status;
        if (! Status) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Status"];
        }

        // TODO implement code

        var ret = {
            NextPageToken: "",
            Jobs: /*S3s*/[ /*S1v*/{
                UserMetadata: /*S1s*/{} /* map */,
                Input: /*S5*/{
                    Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    Key: "",
                    Container: "",
                    AspectRatio: "",
                    Resolution: "",
                    FrameRate: "",
                    Interlaced: "",
                    DetectedProperties: {
                        FileSize: 0 /*long*/,
                        Height: 0,
                        FrameRate: "",
                        DurationMillis: 0 /*long*/,
                        Width: 0
                    }
                },
                Outputs: [ /*S1w*/{
                    Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    AppliedColorSpaceConversion: "",
                    DurationMillis: 0 /*long*/,
                    Watermarks: /*Sn*/[ {
                        PresetWatermarkId: "",
                        InputKey: "",
                        Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                    } /*, ...*/ ],
                    Captions: /*S13*/{
                        MergePolicy: "",
                        CaptionFormats: [ {
                            Format: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            Pattern: ""
                        } /*, ...*/ ],
                        CaptionSources: [ {
                            Label: "",
                            Language: "",
                            Key: "",
                            TimeOffset: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                        } /*, ...*/ ]
                    },
                    FrameRate: "",
                    ThumbnailEncryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    Id: "",
                    AlbumArt: /*Sr*/{
                        MergePolicy: "",
                        Artwork: [ {
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            AlbumArtFormat: "",
                            InputKey: "",
                            MaxHeight: "",
                            MaxWidth: "",
                            PaddingPolicy: "",
                            SizingPolicy: ""
                        } /*, ...*/ ]
                    },
                    SegmentDuration: "",
                    Duration: 0 /*long*/,
                    Composition: /*Sz*/[ {
                        TimeSpan: {
                            Duration: "",
                            StartTime: ""
                        }
                    } /*, ...*/ ],
                    ThumbnailPattern: "",
                    Key: "",
                    StatusDetail: "",
                    Height: 0,
                    Width: 0,
                    PresetId: "",
                    FileSize: 0 /*long*/,
                    Rotate: "",
                    Status: ""
                } /*, ...*/ ],
                Arn: "",
                PipelineId: "",
                Timing: {
                    FinishTimeMillis: 0 /*long*/,
                    SubmitTimeMillis: 0 /*long*/,
                    StartTimeMillis: 0 /*long*/
                },
                Playlists: [ {
                    Name: "",
                    StatusDetail: "",
                    OutputKeys: /*S1i*/[ "" /*, ...*/ ],
                    PlayReadyDrm: /*S1n*/{
                        InitializationVector: "",
                        Key: "",
                        KeyId: "",
                        Format: "",
                        LicenseAcquisitionUrl: "",
                        KeyMd5: ""
                    },
                    Format: "",
                    HlsContentProtection: /*S1j*/{
                        InitializationVector: "",
                        Key: "",
                        Method: "",
                        LicenseAcquisitionUrl: "",
                        KeyMd5: "",
                        KeyStoragePolicy: ""
                    },
                    Status: ""
                } /*, ...*/ ],
                Id: "",
                OutputKeyPrefix: "",
                Status: "",
                Output: /*S1w*/{
                    Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    AppliedColorSpaceConversion: "",
                    DurationMillis: 0 /*long*/,
                    Watermarks: /*Sn*/[ {
                        PresetWatermarkId: "",
                        InputKey: "",
                        Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                    } /*, ...*/ ],
                    Captions: /*S13*/{
                        MergePolicy: "",
                        CaptionFormats: [ {
                            Format: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            Pattern: ""
                        } /*, ...*/ ],
                        CaptionSources: [ {
                            Label: "",
                            Language: "",
                            Key: "",
                            TimeOffset: "",
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    }
                        } /*, ...*/ ]
                    },
                    FrameRate: "",
                    ThumbnailEncryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                    Id: "",
                    AlbumArt: /*Sr*/{
                        MergePolicy: "",
                        Artwork: [ {
                            Encryption: /*Sc*/{
                        InitializationVector: "",
                        Mode: "",
                        Key: "",
                        KeyMd5: ""
                    },
                            AlbumArtFormat: "",
                            InputKey: "",
                            MaxHeight: "",
                            MaxWidth: "",
                            PaddingPolicy: "",
                            SizingPolicy: ""
                        } /*, ...*/ ]
                    },
                    SegmentDuration: "",
                    Duration: 0 /*long*/,
                    Composition: /*Sz*/[ {
                        TimeSpan: {
                            Duration: "",
                            StartTime: ""
                        }
                    } /*, ...*/ ],
                    ThumbnailPattern: "",
                    Key: "",
                    StatusDetail: "",
                    Height: 0,
                    Width: 0,
                    PresetId: "",
                    FileSize: 0 /*long*/,
                    Rotate: "",
                    Status: ""
                }
            } /*, ...*/ ]
        };
        return [200, ret];
    });
