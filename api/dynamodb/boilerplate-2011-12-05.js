'use strict';

const awsCommon = require('../../lib/aws-common');

/**
 * Amazon DynamoDB version 2011-12-05
 *
 * --- TODO REMOVE WHEN IMPLEMENTED ---
 * AUTOGENERATED BY build-api.py
 */

// Setup input and output to use AWS protocol json
require('../../lib/aws-common/shape_http')('json', module.exports, null);
// -----------------------------------
module.exports.DeleteTable = function DeleteTable(aws) {
  var tableName = aws.params.TableName;
  if (!tableName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter TableName'];
  }


  // TODO implement code

  var ret = {
    TableDescription: /*S15*/{
      TableSizeBytes: 0 /*Long*/,
      TableName: '',
      ItemCount: 0 /*Long*/,
      KeySchema: /*Sy*/{
        HashKeyElement: /*Sz*/{
          AttributeName: '',
          AttributeType: '',
        },
        RangeKeyElement: /*Sz*/{
          AttributeName: '',
          AttributeType: '',
        },
      },
      ProvisionedThroughput: {
        LastIncreaseDateTime: awsCommon.timestamp(),
        LastDecreaseDateTime: awsCommon.timestamp(),
        NumberOfDecreasesToday: 0 /*Long*/,
        WriteCapacityUnits: 0 /*Long*/,
        ReadCapacityUnits: 0 /*Long*/,
      },
      CreationDateTime: awsCommon.timestamp(),
      TableStatus: '',
    },
  };
  return [200, ret];
};
// -----------------------------------
module.exports.BatchGetItem = function BatchGetItem(aws) {
  var requestItems = aws.params.RequestItems;
  if (!requestItems) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter RequestItems'];
  }


  // TODO implement code

  var ret = {
    UnprocessedKeys: /*S2*/{} /*Map*/,
    Responses: {} /*Map*/,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.BatchWriteItem = function BatchWriteItem(aws) {
  var requestItems = aws.params.RequestItems;
  if (!requestItems) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter RequestItems'];
  }


  // TODO implement code

  var ret = {
    UnprocessedItems: /*So*/{} /*Map*/,
    Responses: {} /*Map*/,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.GetItem = function GetItem(aws) {
  var consistentRead = aws.params.ConsistentRead /* Type boolean */;
  var tableName = aws.params.TableName;
  var key = aws.params.Key;
  var attributesToGet = aws.params.AttributesToGet;
  if (!tableName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter TableName'];
  }
  if (!key) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter Key'];
  }


  // TODO implement code

  var ret = {
    ConsumedCapacityUnits: 0.0 /*Double*/,
    Item: /*Sl*/{} /*Map*/,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.Query = function Query(aws) {
  var consistentRead = aws.params.ConsistentRead /* Type boolean */;
  var count = aws.params.Count /* Type boolean */;
  var tableName = aws.params.TableName;
  var limit = aws.params.Limit /* Type integer */;
  var rangeKeyCondition = aws.params.RangeKeyCondition;
  var attributesToGet = aws.params.AttributesToGet;
  var exclusiveStartKey = aws.params.ExclusiveStartKey;
  var hashKeyValue = aws.params.HashKeyValue;
  var scanIndexForward = aws.params.ScanIndexForward /* Type boolean */;
  if (!tableName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter TableName'];
  }
  if (!hashKeyValue) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter HashKeyValue'];
  }


  // TODO implement code

  var ret = {
    Count: 0,
    ConsumedCapacityUnits: 0.0 /*Double*/,
    Items: /*Sk*/[ /*Sl*/{} /*Map*/, /* ...*/ ],
    LastEvaluatedKey: /*S6*/{
      HashKeyElement: /*S7*/{
        B: null /*Blob*/,
        NS: [ '', /* ...*/ ],
        SS: [ '', /* ...*/ ],
        BS: [ null /*Blob*/, /* ...*/ ],
        N: '',
        S: '',
      },
      RangeKeyElement: /*S7*/{
        B: null /*Blob*/,
        NS: [ '', /* ...*/ ],
        SS: [ '', /* ...*/ ],
        BS: [ null /*Blob*/, /* ...*/ ],
        N: '',
        S: '',
      },
    },
  };
  return [200, ret];
};
// -----------------------------------
module.exports.ListTables = function ListTables(aws) {
  var exclusiveStartTableName = aws.params.ExclusiveStartTableName;
  var limit = aws.params.Limit /* Type integer */;


  // TODO implement code

  var ret = {
    LastEvaluatedTableName: '',
    TableNames: [ '', /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.DeleteItem = function DeleteItem(aws) {
  var tableName = aws.params.TableName;
  var expected = aws.params.Expected;
  var key = aws.params.Key;
  var returnValues = aws.params.ReturnValues;
  if (!tableName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter TableName'];
  }
  if (!key) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter Key'];
  }


  // TODO implement code

  var ret = {
    Attributes: /*Sl*/{} /*Map*/,
    ConsumedCapacityUnits: 0.0 /*Double*/,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.DescribeTable = function DescribeTable(aws) {
  var tableName = aws.params.TableName;
  if (!tableName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter TableName'];
  }


  // TODO implement code

  var ret = {
    Table: /*S15*/{
      TableSizeBytes: 0 /*Long*/,
      TableName: '',
      ItemCount: 0 /*Long*/,
      KeySchema: /*Sy*/{
        HashKeyElement: /*Sz*/{
          AttributeName: '',
          AttributeType: '',
        },
        RangeKeyElement: /*Sz*/{
          AttributeName: '',
          AttributeType: '',
        },
      },
      ProvisionedThroughput: {
        LastIncreaseDateTime: awsCommon.timestamp(),
        LastDecreaseDateTime: awsCommon.timestamp(),
        NumberOfDecreasesToday: 0 /*Long*/,
        WriteCapacityUnits: 0 /*Long*/,
        ReadCapacityUnits: 0 /*Long*/,
      },
      CreationDateTime: awsCommon.timestamp(),
      TableStatus: '',
    },
  };
  return [200, ret];
};
// -----------------------------------
module.exports.PutItem = function PutItem(aws) {
  var expected = aws.params.Expected;
  var tableName = aws.params.TableName;
  var item = aws.params.Item;
  var returnValues = aws.params.ReturnValues;
  if (!tableName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter TableName'];
  }
  if (!item) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter Item'];
  }


  // TODO implement code

  var ret = {
    Attributes: /*Sl*/{} /*Map*/,
    ConsumedCapacityUnits: 0.0 /*Double*/,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.UpdateTable = function UpdateTable(aws) {
  var tableName = aws.params.TableName;
  var provisionedThroughput = aws.params.ProvisionedThroughput;
  if (!tableName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter TableName'];
  }
  if (!provisionedThroughput) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter ProvisionedThroughput'];
  }


  // TODO implement code

  var ret = {
    TableDescription: /*S15*/{
      TableSizeBytes: 0 /*Long*/,
      TableName: '',
      ItemCount: 0 /*Long*/,
      KeySchema: /*Sy*/{
        HashKeyElement: /*Sz*/{
          AttributeName: '',
          AttributeType: '',
        },
        RangeKeyElement: /*Sz*/{
          AttributeName: '',
          AttributeType: '',
        },
      },
      ProvisionedThroughput: {
        LastIncreaseDateTime: awsCommon.timestamp(),
        LastDecreaseDateTime: awsCommon.timestamp(),
        NumberOfDecreasesToday: 0 /*Long*/,
        WriteCapacityUnits: 0 /*Long*/,
        ReadCapacityUnits: 0 /*Long*/,
      },
      CreationDateTime: awsCommon.timestamp(),
      TableStatus: '',
    },
  };
  return [200, ret];
};
// -----------------------------------
module.exports.UpdateItem = function UpdateItem(aws) {
  var tableName = aws.params.TableName;
  var expected = aws.params.Expected;
  var key = aws.params.Key;
  var attributeUpdates = aws.params.AttributeUpdates /* Type map */;
  var returnValues = aws.params.ReturnValues;
  if (!tableName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter TableName'];
  }
  if (!key) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter Key'];
  }
  if (!attributeUpdates) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter AttributeUpdates'];
  }


  // TODO implement code

  var ret = {
    Attributes: /*Sl*/{} /*Map*/,
    ConsumedCapacityUnits: 0.0 /*Double*/,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.Scan = function Scan(aws) {
  var count = aws.params.Count /* Type boolean */;
  var tableName = aws.params.TableName;
  var limit = aws.params.Limit /* Type integer */;
  var attributesToGet = aws.params.AttributesToGet;
  var exclusiveStartKey = aws.params.ExclusiveStartKey;
  var scanFilter = aws.params.ScanFilter /* Type map */;
  if (!tableName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter TableName'];
  }


  // TODO implement code

  var ret = {
    LastEvaluatedKey: /*S6*/{
      HashKeyElement: /*S7*/{
        B: null /*Blob*/,
        NS: [ '', /* ...*/ ],
        SS: [ '', /* ...*/ ],
        BS: [ null /*Blob*/, /* ...*/ ],
        N: '',
        S: '',
      },
      RangeKeyElement: /*S7*/{
        B: null /*Blob*/,
        NS: [ '', /* ...*/ ],
        SS: [ '', /* ...*/ ],
        BS: [ null /*Blob*/, /* ...*/ ],
        N: '',
        S: '',
      },
    },
    Count: 0,
    ConsumedCapacityUnits: 0.0 /*Double*/,
    Items: /*Sk*/[ /*Sl*/{} /*Map*/, /* ...*/ ],
    ScannedCount: 0,
  };
  return [200, ret];
};
// -----------------------------------
module.exports.CreateTable = function CreateTable(aws) {
  var tableName = aws.params.TableName;
  var keySchema = aws.params.KeySchema;
  var provisionedThroughput = aws.params.ProvisionedThroughput;
  if (!tableName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter TableName'];
  }
  if (!keySchema) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter KeySchema'];
  }
  if (!provisionedThroughput) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter ProvisionedThroughput'];
  }


  // TODO implement code

  var ret = {
    TableDescription: /*S15*/{
      TableSizeBytes: 0 /*Long*/,
      TableName: '',
      ItemCount: 0 /*Long*/,
      KeySchema: /*Sy*/{
        HashKeyElement: /*Sz*/{
          AttributeName: '',
          AttributeType: '',
        },
        RangeKeyElement: /*Sz*/{
          AttributeName: '',
          AttributeType: '',
        },
      },
      ProvisionedThroughput: {
        LastIncreaseDateTime: awsCommon.timestamp(),
        LastDecreaseDateTime: awsCommon.timestamp(),
        NumberOfDecreasesToday: 0 /*Long*/,
        WriteCapacityUnits: 0 /*Long*/,
        ReadCapacityUnits: 0 /*Long*/,
      },
      CreationDateTime: awsCommon.timestamp(),
      TableStatus: '',
    },
  };
  return [200, ret];
};
