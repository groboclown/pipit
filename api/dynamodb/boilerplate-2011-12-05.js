'use strict';
const aws_common = require('../../lib/aws-common');


/**
 * Amazon DynamoDB version 2011-12-05
 *
 * --- TODO REMOVE WHEN IMPLEMENTED ---
 * AUTOGENERATED BY build-api.py
 */
module.exports.DeleteTable = function DeleteTable(aws) {
        var TableName = aws.params.TableName;
        if (! TableName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter TableName"];
        }

        // TODO implement code

        var ret = {
            TableDescription: /*S15*/{
                TableStatus: "",
                ItemCount: 0 /*long*/,
                ProvisionedThroughput: {
                    LastDecreaseDateTime: now(),
                    LastIncreaseDateTime: now(),
                    WriteCapacityUnits: 0 /*long*/,
                    NumberOfDecreasesToday: 0 /*long*/,
                    ReadCapacityUnits: 0 /*long*/
                },
                CreationDateTime: now(),
                TableSizeBytes: 0 /*long*/,
                KeySchema: /*Sy*/{
                    RangeKeyElement: /*Sz*/{
                        AttributeName: "",
                        AttributeType: ""
                    },
                    HashKeyElement: /*Sz*/{
                        AttributeName: "",
                        AttributeType: ""
                    }
                },
                TableName: ""
            }
        };
        return [200, ret];
    }
module.exports.UpdateTable = function UpdateTable(aws) {
        var ProvisionedThroughput = aws.params.ProvisionedThroughput;
        var TableName = aws.params.TableName;
        if (! TableName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter TableName"];
        }        if (! ProvisionedThroughput) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter ProvisionedThroughput"];
        }

        // TODO implement code

        var ret = {
            TableDescription: /*S15*/{
                TableStatus: "",
                ItemCount: 0 /*long*/,
                ProvisionedThroughput: {
                    LastDecreaseDateTime: now(),
                    LastIncreaseDateTime: now(),
                    WriteCapacityUnits: 0 /*long*/,
                    NumberOfDecreasesToday: 0 /*long*/,
                    ReadCapacityUnits: 0 /*long*/
                },
                CreationDateTime: now(),
                TableSizeBytes: 0 /*long*/,
                KeySchema: /*Sy*/{
                    RangeKeyElement: /*Sz*/{
                        AttributeName: "",
                        AttributeType: ""
                    },
                    HashKeyElement: /*Sz*/{
                        AttributeName: "",
                        AttributeType: ""
                    }
                },
                TableName: ""
            }
        };
        return [200, ret];
    }
module.exports.UpdateItem = function UpdateItem(aws) {
        var ReturnValues = aws.params.ReturnValues;
        var AttributeUpdates = aws.params.AttributeUpdates /* map */;
        var Expected = aws.params.Expected;
        var Key = aws.params.Key;
        var TableName = aws.params.TableName;
        if (! TableName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter TableName"];
        }        if (! Key) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Key"];
        }        if (! AttributeUpdates) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter AttributeUpdates"];
        }

        // TODO implement code

        var ret = {
            Attributes: /*Sl*/{} /* map */,
            ConsumedCapacityUnits: 0.0 /*double*/
        };
        return [200, ret];
    }
module.exports.ListTables = function ListTables(aws) {
        var Limit = aws.params.Limit /* integer */;
        var ExclusiveStartTableName = aws.params.ExclusiveStartTableName;


        // TODO implement code

        var ret = {
            TableNames: [ "" /*, ...*/ ],
            LastEvaluatedTableName: ""
        };
        return [200, ret];
    }
module.exports.Query = function Query(aws) {
        var Count = aws.params.Count /* boolean */;
        var Limit = aws.params.Limit /* integer */;
        var ScanIndexForward = aws.params.ScanIndexForward /* boolean */;
        var RangeKeyCondition = aws.params.RangeKeyCondition;
        var AttributesToGet = aws.params.AttributesToGet;
        var ConsistentRead = aws.params.ConsistentRead /* boolean */;
        var ExclusiveStartKey = aws.params.ExclusiveStartKey;
        var HashKeyValue = aws.params.HashKeyValue;
        var TableName = aws.params.TableName;
        if (! TableName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter TableName"];
        }        if (! HashKeyValue) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter HashKeyValue"];
        }

        // TODO implement code

        var ret = {
            Count: 0,
            Items: /*Sk*/[ /*Sl*/{} /* map */ /*, ...*/ ],
            ConsumedCapacityUnits: 0.0 /*double*/,
            LastEvaluatedKey: /*S6*/{
                RangeKeyElement: /*S7*/{
                    B: null /*blob*/,
                    S: "",
                    NS: [ "" /*, ...*/ ],
                    N: "",
                    BS: [ null /*blob*/ /*, ...*/ ],
                    SS: [ "" /*, ...*/ ]
                },
                HashKeyElement: /*S7*/{
                    B: null /*blob*/,
                    S: "",
                    NS: [ "" /*, ...*/ ],
                    N: "",
                    BS: [ null /*blob*/ /*, ...*/ ],
                    SS: [ "" /*, ...*/ ]
                }
            }
        };
        return [200, ret];
    }
module.exports.BatchWriteItem = function BatchWriteItem(aws) {
        var RequestItems = aws.params.RequestItems;
        if (! RequestItems) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter RequestItems"];
        }

        // TODO implement code

        var ret = {
            UnprocessedItems: /*So*/{} /* map */,
            Responses: {} /* map */
        };
        return [200, ret];
    }
module.exports.Scan = function Scan(aws) {
        var Count = aws.params.Count /* boolean */;
        var Limit = aws.params.Limit /* integer */;
        var ExclusiveStartKey = aws.params.ExclusiveStartKey;
        var AttributesToGet = aws.params.AttributesToGet;
        var ScanFilter = aws.params.ScanFilter /* map */;
        var TableName = aws.params.TableName;
        if (! TableName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter TableName"];
        }

        // TODO implement code

        var ret = {
            Count: 0,
            Items: /*Sk*/[ /*Sl*/{} /* map */ /*, ...*/ ],
            ScannedCount: 0,
            LastEvaluatedKey: /*S6*/{
                RangeKeyElement: /*S7*/{
                    B: null /*blob*/,
                    S: "",
                    NS: [ "" /*, ...*/ ],
                    N: "",
                    BS: [ null /*blob*/ /*, ...*/ ],
                    SS: [ "" /*, ...*/ ]
                },
                HashKeyElement: /*S7*/{
                    B: null /*blob*/,
                    S: "",
                    NS: [ "" /*, ...*/ ],
                    N: "",
                    BS: [ null /*blob*/ /*, ...*/ ],
                    SS: [ "" /*, ...*/ ]
                }
            },
            ConsumedCapacityUnits: 0.0 /*double*/
        };
        return [200, ret];
    }
module.exports.GetItem = function GetItem(aws) {
        var ConsistentRead = aws.params.ConsistentRead /* boolean */;
        var Key = aws.params.Key;
        var AttributesToGet = aws.params.AttributesToGet;
        var TableName = aws.params.TableName;
        if (! TableName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter TableName"];
        }        if (! Key) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Key"];
        }

        // TODO implement code

        var ret = {
            Item: /*Sl*/{} /* map */,
            ConsumedCapacityUnits: 0.0 /*double*/
        };
        return [200, ret];
    }
module.exports.DescribeTable = function DescribeTable(aws) {
        var TableName = aws.params.TableName;
        if (! TableName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter TableName"];
        }

        // TODO implement code

        var ret = {
            Table: /*S15*/{
                TableStatus: "",
                ItemCount: 0 /*long*/,
                ProvisionedThroughput: {
                    LastDecreaseDateTime: now(),
                    LastIncreaseDateTime: now(),
                    WriteCapacityUnits: 0 /*long*/,
                    NumberOfDecreasesToday: 0 /*long*/,
                    ReadCapacityUnits: 0 /*long*/
                },
                CreationDateTime: now(),
                TableSizeBytes: 0 /*long*/,
                KeySchema: /*Sy*/{
                    RangeKeyElement: /*Sz*/{
                        AttributeName: "",
                        AttributeType: ""
                    },
                    HashKeyElement: /*Sz*/{
                        AttributeName: "",
                        AttributeType: ""
                    }
                },
                TableName: ""
            }
        };
        return [200, ret];
    }
module.exports.PutItem = function PutItem(aws) {
        var Item = aws.params.Item;
        var Expected = aws.params.Expected;
        var ReturnValues = aws.params.ReturnValues;
        var TableName = aws.params.TableName;
        if (! TableName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter TableName"];
        }        if (! Item) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Item"];
        }

        // TODO implement code

        var ret = {
            Attributes: /*Sl*/{} /* map */,
            ConsumedCapacityUnits: 0.0 /*double*/
        };
        return [200, ret];
    }
module.exports.CreateTable = function CreateTable(aws) {
        var ProvisionedThroughput = aws.params.ProvisionedThroughput;
        var KeySchema = aws.params.KeySchema;
        var TableName = aws.params.TableName;
        if (! TableName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter TableName"];
        }        if (! KeySchema) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter KeySchema"];
        }        if (! ProvisionedThroughput) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter ProvisionedThroughput"];
        }

        // TODO implement code

        var ret = {
            TableDescription: /*S15*/{
                TableStatus: "",
                ItemCount: 0 /*long*/,
                ProvisionedThroughput: {
                    LastDecreaseDateTime: now(),
                    LastIncreaseDateTime: now(),
                    WriteCapacityUnits: 0 /*long*/,
                    NumberOfDecreasesToday: 0 /*long*/,
                    ReadCapacityUnits: 0 /*long*/
                },
                CreationDateTime: now(),
                TableSizeBytes: 0 /*long*/,
                KeySchema: /*Sy*/{
                    RangeKeyElement: /*Sz*/{
                        AttributeName: "",
                        AttributeType: ""
                    },
                    HashKeyElement: /*Sz*/{
                        AttributeName: "",
                        AttributeType: ""
                    }
                },
                TableName: ""
            }
        };
        return [200, ret];
    }
module.exports.BatchGetItem = function BatchGetItem(aws) {
        var RequestItems = aws.params.RequestItems;
        if (! RequestItems) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter RequestItems"];
        }

        // TODO implement code

        var ret = {
            UnprocessedKeys: /*S2*/{} /* map */,
            Responses: {} /* map */
        };
        return [200, ret];
    }
module.exports.DeleteItem = function DeleteItem(aws) {
        var ReturnValues = aws.params.ReturnValues;
        var Expected = aws.params.Expected;
        var Key = aws.params.Key;
        var TableName = aws.params.TableName;
        if (! TableName) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter TableName"];
        }        if (! Key) {
            return [400, "Sender", "MissingParameter", "Did not specify parameter Key"];
        }

        // TODO implement code

        var ret = {
            Attributes: /*Sl*/{} /* map */,
            ConsumedCapacityUnits: 0.0 /*double*/
        };
        return [200, ret];
    }
