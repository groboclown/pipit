'use strict';

const awsCommon = require('../../lib/aws-common');

/**
 * 0 version 2015-08-04
 *
 * --- TODO REMOVE WHEN IMPLEMENTED ---
 * AUTOGENERATED BY build-api.py
 */

// Setup input and output to use AWS protocol json
require('../../lib/aws-common/shape_http')('json', module.exports, null)
// -----------------------------------
module.exports.UpdateDestination = function UpdateDestination(aws) {
  var DestinationId = aws.params['DestinationId'];
  var DeliveryStreamName = aws.params['DeliveryStreamName'];
  var RedshiftDestinationUpdate = aws.params['RedshiftDestinationUpdate'] /* Type structure */;
  var CurrentDeliveryStreamVersionId = aws.params['CurrentDeliveryStreamVersionId'];
  var S3DestinationUpdate = aws.params['S3DestinationUpdate'];
  if (!DeliveryStreamName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter DeliveryStreamName'];
  }
  if (!CurrentDeliveryStreamVersionId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter CurrentDeliveryStreamVersionId'];
  }
  if (!DestinationId) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter DestinationId'];
  }


  // TODO implement code

  var ret = {

  };
  return [200, ret];
};
// -----------------------------------
module.exports.PutRecordBatch = function PutRecordBatch(aws) {
  var DeliveryStreamName = aws.params['DeliveryStreamName'];
  var Records = aws.params['Records'] /* Type list */;
  if (!DeliveryStreamName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter DeliveryStreamName'];
  }
  if (!Records) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter Records'];
  }


  // TODO implement code

  var ret = {
    FailedPutCount: 0,
    RequestResponses: [ {
      ErrorCode: '',
      ErrorMessage: '',
      RecordId: '',
    }, /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.PutRecord = function PutRecord(aws) {
  var DeliveryStreamName = aws.params['DeliveryStreamName'];
  var Record = aws.params['Record'];
  if (!DeliveryStreamName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter DeliveryStreamName'];
  }
  if (!Record) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter Record'];
  }


  // TODO implement code

  var ret = {
    RecordId: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.CreateDeliveryStream = function CreateDeliveryStream(aws) {
  var S3DestinationConfiguration = aws.params['S3DestinationConfiguration'];
  var DeliveryStreamName = aws.params['DeliveryStreamName'];
  var RedshiftDestinationConfiguration = aws.params['RedshiftDestinationConfiguration'] /* Type structure */;
  if (!DeliveryStreamName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter DeliveryStreamName'];
  }


  // TODO implement code

  var ret = {
    DeliveryStreamARN: '',
  };
  return [200, ret];
};
// -----------------------------------
module.exports.ListDeliveryStreams = function ListDeliveryStreams(aws) {
  var ExclusiveStartDeliveryStreamName = aws.params['ExclusiveStartDeliveryStreamName'];
  var Limit = aws.params['Limit'] /* Type integer */;


  // TODO implement code

  var ret = {
    HasMoreDeliveryStreams: false,
    DeliveryStreamNames: [ '', /* ...*/ ],
  };
  return [200, ret];
};
// -----------------------------------
module.exports.DeleteDeliveryStream = function DeleteDeliveryStream(aws) {
  var DeliveryStreamName = aws.params['DeliveryStreamName'];
  if (!DeliveryStreamName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter DeliveryStreamName'];
  }


  // TODO implement code

  var ret = {

  };
  return [200, ret];
};
// -----------------------------------
module.exports.DescribeDeliveryStream = function DescribeDeliveryStream(aws) {
  var DeliveryStreamName = aws.params['DeliveryStreamName'];
  var ExclusiveStartDestinationId = aws.params['ExclusiveStartDestinationId'];
  var Limit = aws.params['Limit'] /* Type integer */;
  if (!DeliveryStreamName) {
    return [400, 'Sender', 'MissingParameter', 'Did not specify parameter DeliveryStreamName'];
  }


  // TODO implement code

  var ret = {
    DeliveryStreamDescription: {
      VersionId: '',
      DeliveryStreamStatus: '',
      CreateTimestamp: awsCommon.timestamp(),
      HasMoreDestinations: false,
      DeliveryStreamName: '',
      Destinations: [ {
        DestinationId: '',
        RedshiftDestinationDescription: {
          CopyCommand: /*Sh*/{
            DataTableColumns: '',
            DataTableName: '',
            CopyOptions: '',
          },
          ClusterJDBCURL: '',
          RoleARN: '',
          Username: /*Sl*/'',
          S3DestinationDescription: /*S11*/{
            Prefix: '',
            BucketARN: '',
            EncryptionConfiguration: /*Sb*/{
              NoEncryptionConfig: '',
              KMSEncryptionConfig: {
                AWSKMSKeyARN: '',
              },
            },
            BufferingHints: /*S7*/{
              IntervalInSeconds: 0,
              SizeInMBs: 0,
            },
            RoleARN: '',
            CompressionFormat: '',
          },
        },
        S3DestinationDescription: /*S11*/{
            Prefix: '',
            BucketARN: '',
            EncryptionConfiguration: /*Sb*/{
              NoEncryptionConfig: '',
              KMSEncryptionConfig: {
                AWSKMSKeyARN: '',
              },
            },
            BufferingHints: /*S7*/{
              IntervalInSeconds: 0,
              SizeInMBs: 0,
            },
            RoleARN: '',
            CompressionFormat: '',
          },
      }, /* ...*/ ],
      LastUpdateTimestamp: awsCommon.timestamp(),
      DeliveryStreamARN: '',
    },
  };
  return [200, ret];
};
