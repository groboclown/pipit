'use strict';

const awsCommon = require('../../lib/aws-common');

/**
 * AWS Import/Export version 2010-06-01
 *
 * --- TODO REMOVE WHEN IMPLEMENTED ---
 * AUTOGENERATED BY build-api.py
 */

// Setup input and output to use AWS protocol query
require('../../lib/aws-common/shape_http')('query', module.exports, 'http://importexport.amazonaws.com/doc/2010-06-01/');
// -----------------------------------
module.exports.UpdateJob = awsCommon.as(
  '/?Operation=UpdateJob',
  function UpdateJob(aws) {
    var validateOnly = aws.params.ValidateOnly /* Type boolean */;
    var manifest = aws.params.Manifest;
    var jobType = aws.params.JobType;
    var jobId = aws.params.JobId;
    var aPIVersion = aws.params.APIVersion;
    if (!jobId) {
      return [400, 'Sender', 'MissingParameter', 'Did not specify parameter JobId'];
    }
    if (!manifest) {
      return [400, 'Sender', 'MissingParameter', 'Did not specify parameter Manifest'];
    }
    if (!jobType) {
      return [400, 'Sender', 'MissingParameter', 'Did not specify parameter JobType'];
    }
    if (!validateOnly) {
      return [400, 'Sender', 'MissingParameter', 'Did not specify parameter ValidateOnly'];
    }


    // TODO implement code

    var ret = {
      ArtifactList: /*Sf*/[ {
        Description: '',
        URL: '',
      }, /* ...*/ ],
      WarningMessage: '',
      Success: false,
    };
    return [200, ret];
  });
// -----------------------------------
module.exports.GetShippingLabel = awsCommon.as(
  '/?Operation=GetShippingLabel',
  function GetShippingLabel(aws) {
    var city = aws.params.city;
    var aPIVersion = aws.params.APIVersion;
    var postalCode = aws.params.postalCode;
    var street1 = aws.params.street1;
    var phoneNumber = aws.params.phoneNumber;
    var jobIds = aws.params.jobIds /* Type list */;
    var company = aws.params.company;
    var street3 = aws.params.street3;
    var name = aws.params.name;
    var country = aws.params.country;
    var stateOrProvince = aws.params.stateOrProvince;
    var street2 = aws.params.street2;
    if (!jobIds) {
      return [400, 'Sender', 'MissingParameter', 'Did not specify parameter jobIds'];
    }


    // TODO implement code

    var ret = {
      Warning: '',
      ShippingLabelURL: '',
    };
    return [200, ret];
  });
// -----------------------------------
module.exports.GetStatus = awsCommon.as(
  '/?Operation=GetStatus',
  function GetStatus(aws) {
    var jobId = aws.params.JobId;
    var aPIVersion = aws.params.APIVersion;
    if (!jobId) {
      return [400, 'Sender', 'MissingParameter', 'Did not specify parameter JobId'];
    }


    // TODO implement code

    var ret = {
      LogBucket: '',
      LogKey: '',
      ProgressCode: '',
      ErrorCount: 0,
      ArtifactList: /*Sf*/[ {
        Description: '',
        URL: '',
      }, /* ...*/ ],
      LocationMessage: '',
      Carrier: '',
      JobType: '',
      ProgressMessage: '',
      Signature: '',
      LocationCode: '',
      SignatureFileContents: '',
      CreationDate: awsCommon.timestamp(),
      JobId: '',
      TrackingNumber: '',
      CurrentManifest: '',
    };
    return [200, ret];
  });
// -----------------------------------
module.exports.CancelJob = awsCommon.as(
  '/?Operation=CancelJob',
  function CancelJob(aws) {
    var jobId = aws.params.JobId;
    var aPIVersion = aws.params.APIVersion;
    if (!jobId) {
      return [400, 'Sender', 'MissingParameter', 'Did not specify parameter JobId'];
    }


    // TODO implement code

    var ret = {
      Success: false,
    };
    return [200, ret];
  });
// -----------------------------------
module.exports.ListJobs = awsCommon.as(
  '/?Operation=ListJobs',
  function ListJobs(aws) {
    var marker = aws.params.Marker;
    var aPIVersion = aws.params.APIVersion;
    var maxJobs = aws.params.MaxJobs /* Type integer */;


    // TODO implement code

    var ret = {
      Jobs: [ {
        CreationDate: awsCommon.timestamp(),
        JobType: '',
        JobId: '',
        IsCanceled: false,
      }, /* ...*/ ],
      IsTruncated: false,
    };
    return [200, ret];
  });
// -----------------------------------
module.exports.CreateJob = awsCommon.as(
  '/?Operation=CreateJob',
  function CreateJob(aws) {
    var manifestAddendum = aws.params.ManifestAddendum;
    var manifest = aws.params.Manifest;
    var validateOnly = aws.params.ValidateOnly /* Type boolean */;
    var jobType = aws.params.JobType;
    var aPIVersion = aws.params.APIVersion;
    if (!jobType) {
      return [400, 'Sender', 'MissingParameter', 'Did not specify parameter JobType'];
    }
    if (!manifest) {
      return [400, 'Sender', 'MissingParameter', 'Did not specify parameter Manifest'];
    }
    if (!validateOnly) {
      return [400, 'Sender', 'MissingParameter', 'Did not specify parameter ValidateOnly'];
    }


    // TODO implement code

    var ret = {
      ArtifactList: /*Sf*/[ {
        Description: '',
        URL: '',
      }, /* ...*/ ],
      SignatureFileContents: '',
      Signature: '',
      JobType: '',
      WarningMessage: '',
      JobId: '',
    };
    return [200, ret];
  });
